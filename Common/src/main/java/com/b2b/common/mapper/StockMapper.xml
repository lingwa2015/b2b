<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.b2b.common.dao.StockMapper" >
  <resultMap id="BaseResultMap" type="com.b2b.common.domain.Stock" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="item_id" property="itemId" jdbcType="INTEGER" />
    <result column="item_name" property="itemName" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="alert_num" property="alertNum" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="warning_num" property="warningNum" jdbcType="INTEGER" />
    <result column="last_time" property="lastTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, item_id, item_name, num, position, type, state, create_time, alert_num, modify_time, 
    warning_num, last_time
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.b2b.common.domain.StockExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
      and item_id in (select id from item where STATUS=1 and isDown=0) 
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitFlag">
	  limit ${start},${limit}
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from stock
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stock
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.b2b.common.domain.StockExample" >
    delete from stock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.b2b.common.domain.Stock" >
  <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stock (id, item_id, item_name,
      num, position, type, 
      state, create_time, alert_num, 
      modify_time, warning_num, last_time
      )
    values (#{id,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER}, #{itemName,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{position,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{alertNum,jdbcType=INTEGER}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{warningNum,jdbcType=INTEGER}, #{lastTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.b2b.common.domain.Stock" >
    insert into stock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="itemName != null" >
        item_name,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="alertNum != null" >
        alert_num,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="warningNum != null" >
        warning_num,
      </if>
      <if test="lastTime != null" >
        last_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alertNum != null" >
        #{alertNum,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="warningNum != null" >
        #{warningNum,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null" >
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.b2b.common.domain.StockExample" resultType="java.lang.Integer" >
    select count(*) from stock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
      and item_id in (select id from item where STATUS=1 and isDown=0)
    </if>
  </select>
  <select id="countByExampleWithIsdown"  parameterType="com.b2b.common.domain.StockExample" resultType="java.lang.Integer" >
  	 select count(*) from stock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
      and item_id in (select id from item where STATUS=1)
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update stock
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.itemId != null" >
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.itemName != null" >
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.alertNum != null" >
        alert_num = #{record.alertNum,jdbcType=INTEGER},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.warningNum != null" >
        warning_num = #{record.warningNum,jdbcType=INTEGER},
      </if>
      <if test="record.lastTime != null" >
        last_time = #{record.lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update stock
    set id = #{record.id,jdbcType=INTEGER},
      item_id = #{record.itemId,jdbcType=INTEGER},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      position = #{record.position,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      alert_num = #{record.alertNum,jdbcType=INTEGER},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      warning_num = #{record.warningNum,jdbcType=INTEGER},
      last_time = #{record.lastTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.b2b.common.domain.Stock" >
    update stock
    <set >
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null" >
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alertNum != null" >
        alert_num = #{alertNum,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="warningNum != null" >
        warning_num = #{warningNum,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null" >
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.b2b.common.domain.Stock" >
    update stock
    set item_id = #{itemId,jdbcType=INTEGER},
      item_name = #{itemName,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      position = #{position,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      alert_num = #{alertNum,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      warning_num = #{warningNum,jdbcType=INTEGER},
      last_time = #{lastTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="countStockInfoWithModifyNum" resultType="int">
  	SELECT
	count(1)
	FROM
		stock s
	LEFT JOIN item i ON s.item_id = i.id
	LEFT JOIN item_category io1 ON io1.id = i.category_id
	LEFT JOIN item_category io2 ON io2.id = i.categorylevel_id
	WHERE
		s.state = 1 and 
		s.item_id IN (
			SELECT
				id
			FROM
				item
			WHERE
				STATUS = 1 and city_id = #{cityId}
		)
	<if test="itemName!=null and itemName!=''">
		AND i.item_name LIKE '%${itemName}%'
	</if>
      <if test="isdown!=null and isdown!=''">
          and i.isdown=#{isdown}
      </if>
      <if test="onecate>0">
          and i.`category_id`=#{onecate}
      </if>
      <if test="twocate>0">
          and i.`categorylevel_id`=#{twocate}
      </if>
  </select>
  <select id="getStockInfoWithModifyNum" resultType="hashmap">
  	SELECT
	s.id AS id,
	s.item_id AS itemId,
	i.item_name AS itemName,
	s.num AS num,
	s.modify_time AS modifyTime,
	sct.modify_num AS modifyNum,
	i.sale_size saleSize,
	s.position
	FROM
		stock s
	LEFT JOIN item i ON s.item_id = i.id
	LEFT JOIN stock_check_temp sct ON s.item_id = sct.item_id	
	WHERE
		s.state = 1 and 
		s.item_id IN (
			SELECT
				id
			FROM
				item
			WHERE
				STATUS = 1 and city_id = #{cityId}
		)
	<if test="itemName!=null and itemName!=''">
		AND i.item_name LIKE '%${itemName}%'
	</if>
      <if test="isdown!=null and isdown!=''">
          and i.isdown=#{isdown}
      </if>
      <if test="onecate>0">
          and i.`category_id`=#{onecate}
      </if>
      <if test="twocate>0">
          and i.`categorylevel_id`=#{twocate}
      </if>
ORDER BY s.position
      <if test="start!=null">
          limit #{start},#{limit}
      </if>
  </select>
  <select id="findByItemIngoreIsdown" resultType="com.b2b.common.domain.Stock">
  		SELECT
			id,
			item_id itemId,
			item_name itemName,
			num,
			type,
			state,
			create_time createTime,
			modify_time modifyTime,
			alert_num alertNum
		FROM
			stock
		WHERE
			(item_id = #{itemId} AND state = 1)
		AND item_id IN (
			SELECT
				id
			FROM
				item
			WHERE
				STATUS = 1
		)
  </select>
  
  <select id="findByItemId" resultType="com.b2b.common.domain.Stock">
  	SELECT
		id,
		item_id itemId,
		item_name itemName,
		num,
		type,
		state,
		create_time createTime,
		modify_time modifyTime,
		alert_num alertNum
	FROM
		stock
	WHERE
		state = 1
		AND item_id IN 
		<foreach item="itemid" index="index" collection="itemIds" open="("  
            separator="," close=")">  
            #{itemid}  
        </foreach>  
  </select>
 
  <select id="findByCondition" resultType="com.b2b.common.domain.Stock">
  SELECT
			s.id,
			s.item_id itemId,
			i.item_name itemName,
			s.num,
			s.type,
			s.state,
			s.create_time createTime,
			s.modify_time modifyTime,
			s.alert_num alertNum,
			s.position,i.`sale_size_num` saleSizeNum,
			i.size,i.`cost_price` itemCostPrice ,s.`num` *i.`cost_price` totalAmount ,i.`isDown`,s.warning_num,s.last_time,DATEDIFF(NOW(),s.last_time) day
		FROM
			stock s
			left join item i on s.item_id = i.id
		WHERE
			s.state = 1
		<if test="itemName!=null and itemName!=''">
			AND i.item_name LIKE '%${itemName}%'
		</if>
		<if test="alertFlag">
			AND s.num &lt; s.warning_num
		</if>
		<if test="unsalable>0">
			and DATEDIFF(NOW(),s.last_time) &gt;7
		</if>
		AND s.item_id IN (
			SELECT i.id
			  FROM item i
			 WHERE i.STATUS = 1 
			 <if test="cityId!=null and cityId!=''">
			    and i.city_id = #{cityId}
			 </if>
			 <if test="isdown!=null and isdown!=''">
			    and i.isdown=#{isdown}
			 </if>
			 <if test="onecate>0">
			 	and i.`category_id`=#{onecate}
			 </if>
			 <if test="twocate>0">
			 	and i.`categorylevel_id`=#{twocate}
			 </if>
		)
	    order by s.position
  </select>
  <select id="findIngoreIsdown" resultType="com.b2b.common.domain.Stock">
  	SELECT
			id,
			item_id itemId,
			item_name itemName,
			num,
			type,
			state,
			create_time createTime,
			modify_time modifyTime,
			alert_num alertNum
		FROM
			stock
		WHERE
			state = 1
		<if test="itemName!=null and itemName!=''">
			AND item_name LIKE '%${itemName}%'
		</if>
		<if test="alertFlag">
			AND num &lt; alert_num
		</if>
		AND item_id IN (
			SELECT
				id
			FROM
				item
			WHERE
				STATUS = 1
		)
  </select>
  <select id="count" resultType="int">
  	 SELECT
		count(1)
	FROM
		stock
	WHERE
		
			state = 1
			<if test="itemName!=null and itemName!=''">
				AND item_name LIKE '%${itemName}%'
			</if>
			<if test="alertFlag">
				AND num &lt;= alert_num
			</if>
	AND item_id IN (
		SELECT i.id
		  FROM item i
		  LEFT JOIN item_category ic on i.category_id= ic.id
		 WHERE i.STATUS = 1 and ic.id not in (59, 61)
	)
  </select>
  <!--临时处理  -->
  <select id="temp" resultType="hashmap">
  	SELECT * FROM upmonthstock
  </select>
  <select id="findByItemIdIngoreIsdown" resultType="com.b2b.common.domain.Stock">
  		SELECT
			id,
			item_id,
			item_name,
			num,
			position,
			type,
			state,
			create_time,
			modify_time,
			alert_num
		FROM
			stock
		WHERE
			(state = 1 AND item_id = #{itemId})
		AND item_id IN (
			SELECT
				id
			FROM
				item
			WHERE
				STATUS = 1
		)
  </select>
  <select id="findByItemid" resultType="com.b2b.common.domain.Stock">
  	select * from stock where item_id = #{itemId}
  </select>
  <select id="findStockTotalMoney" resultType="long">
   SELECT
						SUM(s.`num` *i.`cost_price`)
		FROM
			stock s
			left join item i on s.item_id = i.id
		WHERE
			s.state = 1
		<if test="itemName!=null and itemName!=''">
			AND i.item_name LIKE '%${itemName}%'
		</if>
		<if test="alertFlag">
			AND s.num &lt; s.alert_num
		</if>
		<if test="unsalable>0">
			and DATEDIFF(NOW(),s.last_time) &gt;7
		</if>
		AND s.item_id IN (
			SELECT i.id
			  FROM item i
			 WHERE i.STATUS = 1 and i.city_id = #{cityId}
			 <if test="isdown!=null and isdown!=''">
			    and i.isdown=#{isdown}
			 </if>
			 <if test="onecate>0">
			 	and i.`category_id`=#{onecate}
			 </if>
			 <if test="twocate>0">
			 	and i.`categorylevel_id`=#{twocate}
			 </if>
		)
  </select>
  <select id="getStockTotalMoneyByCityId" resultType="long">
  	SELECT
		SUM(s.`num` * i.`cost_price`)
	FROM
		stock s
	LEFT JOIN item i ON s.item_id = i.id
	WHERE
		s.state = 1
	AND s.item_id IN (
		SELECT
			i.id
		FROM
			item i
		WHERE
			i. STATUS = 1
		AND i.city_id = #{cityId}
	)
  </select>
  <select id="findAllStock" resultType="hashmap">
  	SELECT s.`alert_num` alertNum,
       s.`warning_num` warningNum,
       i.`sale_size_num` saleSizeNum,
       ic.category_name categoryName,
       icc.`category_name` cateLevelName,
       i.item_name itemName,
       s.position,
       s.num,
       i.size,
       i.price,
       i.isdown,
       i.buy_price buyPrice,
       i.convert_num convertNum,
       s.last_time lastTime
  FROM stock s
  LEFT JOIN item i ON s.item_id= i.id
  LEFT JOIN item_category ic ON i.category_id= ic.id
  LEFT JOIN `item_category` icc on i.`categorylevel_id`= icc.`id`
		WHERE s.state = 1 
		<if test="itemName!=null and itemName!=''">
			AND i.item_name LIKE "%"#{itemName}"%"
		</if>
		<if test="alertFlag">
			AND s.num &lt;= s.warning_num
		</if>
		<if test="unsalable>0">
			and DATEDIFF(NOW(),s.last_time) &gt;7
		</if>
		and s.item_id IN (
			SELECT
				id
			FROM
				item
			WHERE
				STATUS = 1 
			 <if test="cityId!=null and cityId!=''">
			    and i.city_id = #{cityId}
			 </if>
		     <if test="isdown!=null and isdown!=''">
			    and i.isdown=#{isdown}
			 </if>
			 <if test="onecate>0">
			 	and i.`category_id`=#{onecate}
			 </if>
			 <if test="twocate>0">
			 	and i.`categorylevel_id`=#{twocate}
			 </if>
		)
		ORDER BY s.position
  </select>
  <update id="updateStockNumReduce">
  	UPDATE `stock` set num = num -#{num} where item_id = #{itemId} and num - #{num} &gt;=0
  </update>
  <update id="updateStockNumAdd">
  	UPDATE `stock` set num = num + #{num} where item_id = #{itemId}
  </update>
</mapper>