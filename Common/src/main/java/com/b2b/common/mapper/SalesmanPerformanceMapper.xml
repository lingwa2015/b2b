<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.b2b.common.dao.SalesmanPerformanceMapper" >
  <resultMap id="BaseResultMap" type="com.b2b.common.domain.SalesmanPerformance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="interface_man" property="interfaceMan" jdbcType="VARCHAR" />
    <result column="order_num" property="orderNum" jdbcType="INTEGER" />
    <result column="refund_num" property="refundNum" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="conpany_name" property="conpanyName" jdbcType="VARCHAR" />
    <result column="after_marsale_money" property="afterMarsaleMoney" jdbcType="BIGINT" />
    <result column="sale_money" property="saleMoney" jdbcType="BIGINT" />
    <result column="new_sale_money" property="newSaleMoney" jdbcType="BIGINT" />
    <result column="bag_money" property="bagMoney" jdbcType="BIGINT" />
    <result column="count_date" property="countDate" jdbcType="DATE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, interface_man, order_num, refund_num, company_id, conpany_name, after_marsale_money, 
    sale_money, new_sale_money, bag_money, count_date, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.b2b.common.domain.SalesmanPerformanceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from salesman_performance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitFlag">
	  limit ${start},${limit}
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from salesman_performance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from salesman_performance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.b2b.common.domain.SalesmanPerformanceExample" >
    delete from salesman_performance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.b2b.common.domain.SalesmanPerformance" >
    insert into salesman_performance (id, interface_man, order_num, 
      refund_num, company_id, conpany_name, 
      after_marsale_money, sale_money, new_sale_money, 
      bag_money, count_date, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{interfaceMan,jdbcType=VARCHAR}, #{orderNum,jdbcType=INTEGER}, 
      #{refundNum,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{conpanyName,jdbcType=VARCHAR}, 
      #{afterMarsaleMoney,jdbcType=BIGINT}, #{saleMoney,jdbcType=BIGINT}, #{newSaleMoney,jdbcType=BIGINT}, 
      #{bagMoney,jdbcType=BIGINT}, #{countDate,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.b2b.common.domain.SalesmanPerformance" >
    insert into salesman_performance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="interfaceMan != null" >
        interface_man,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="refundNum != null" >
        refund_num,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="conpanyName != null" >
        conpany_name,
      </if>
      <if test="afterMarsaleMoney != null" >
        after_marsale_money,
      </if>
      <if test="saleMoney != null" >
        sale_money,
      </if>
      <if test="newSaleMoney != null" >
        new_sale_money,
      </if>
      <if test="bagMoney != null" >
        bag_money,
      </if>
      <if test="countDate != null" >
        count_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="interfaceMan != null" >
        #{interfaceMan,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="refundNum != null" >
        #{refundNum,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="conpanyName != null" >
        #{conpanyName,jdbcType=VARCHAR},
      </if>
      <if test="afterMarsaleMoney != null" >
        #{afterMarsaleMoney,jdbcType=BIGINT},
      </if>
      <if test="saleMoney != null" >
        #{saleMoney,jdbcType=BIGINT},
      </if>
      <if test="newSaleMoney != null" >
        #{newSaleMoney,jdbcType=BIGINT},
      </if>
      <if test="bagMoney != null" >
        #{bagMoney,jdbcType=BIGINT},
      </if>
      <if test="countDate != null" >
        #{countDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.b2b.common.domain.SalesmanPerformanceExample" resultType="java.lang.Integer" >
    select count(*) from salesman_performance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update salesman_performance
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.interfaceMan != null" >
        interface_man = #{record.interfaceMan,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNum != null" >
        order_num = #{record.orderNum,jdbcType=INTEGER},
      </if>
      <if test="record.refundNum != null" >
        refund_num = #{record.refundNum,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.conpanyName != null" >
        conpany_name = #{record.conpanyName,jdbcType=VARCHAR},
      </if>
      <if test="record.afterMarsaleMoney != null" >
        after_marsale_money = #{record.afterMarsaleMoney,jdbcType=BIGINT},
      </if>
      <if test="record.saleMoney != null" >
        sale_money = #{record.saleMoney,jdbcType=BIGINT},
      </if>
      <if test="record.newSaleMoney != null" >
        new_sale_money = #{record.newSaleMoney,jdbcType=BIGINT},
      </if>
      <if test="record.bagMoney != null" >
        bag_money = #{record.bagMoney,jdbcType=BIGINT},
      </if>
      <if test="record.countDate != null" >
        count_date = #{record.countDate,jdbcType=DATE},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update salesman_performance
    set id = #{record.id,jdbcType=INTEGER},
      interface_man = #{record.interfaceMan,jdbcType=VARCHAR},
      order_num = #{record.orderNum,jdbcType=INTEGER},
      refund_num = #{record.refundNum,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      conpany_name = #{record.conpanyName,jdbcType=VARCHAR},
      after_marsale_money = #{record.afterMarsaleMoney,jdbcType=BIGINT},
      sale_money = #{record.saleMoney,jdbcType=BIGINT},
      new_sale_money = #{record.newSaleMoney,jdbcType=BIGINT},
      bag_money = #{record.bagMoney,jdbcType=BIGINT},
      count_date = #{record.countDate,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.b2b.common.domain.SalesmanPerformance" >
    update salesman_performance
    <set >
      <if test="interfaceMan != null" >
        interface_man = #{interfaceMan,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="refundNum != null" >
        refund_num = #{refundNum,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="conpanyName != null" >
        conpany_name = #{conpanyName,jdbcType=VARCHAR},
      </if>
      <if test="afterMarsaleMoney != null" >
        after_marsale_money = #{afterMarsaleMoney,jdbcType=BIGINT},
      </if>
      <if test="saleMoney != null" >
        sale_money = #{saleMoney,jdbcType=BIGINT},
      </if>
      <if test="newSaleMoney != null" >
        new_sale_money = #{newSaleMoney,jdbcType=BIGINT},
      </if>
      <if test="bagMoney != null" >
        bag_money = #{bagMoney,jdbcType=BIGINT},
      </if>
      <if test="countDate != null" >
        count_date = #{countDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.b2b.common.domain.SalesmanPerformance" >
    update salesman_performance
    set interface_man = #{interfaceMan,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      refund_num = #{refundNum,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      conpany_name = #{conpanyName,jdbcType=VARCHAR},
      after_marsale_money = #{afterMarsaleMoney,jdbcType=BIGINT},
      sale_money = #{saleMoney,jdbcType=BIGINT},
      new_sale_money = #{newSaleMoney,jdbcType=BIGINT},
      bag_money = #{bagMoney,jdbcType=BIGINT},
      count_date = #{countDate,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="countGroupByInterfaceman" resultType="int">
  	SELECT
	COUNT(1)
FROM
	(
		SELECT
			sum(order_num) orderNum,
			interface_man interfaceMan,
			sum(refund_num) refundNum,
			sum(sale_money) saleMoney,
			sum(new_sale_money) newSaleMoney,
			sum(after_marsale_money) afterMarsaleMoney
		FROM
			salesman_performance
			WHERE count_date &gt;=#{startTime} AND count_date &lt;=#{endTime}
		GROUP BY
			interface_man
	) t where t.saleMoney &lt;&gt; 0
  </select>
  <select id="findPageByDate" resultType="com.b2b.common.domain.SalesmanPerformance">
		  SELECT * FROM (
		  SELECT sum(order_num) orderNum,
		       interface_man interfaceMan,
		       sum(refund_num) refundNum,
		       sum(sale_money) saleMoney,
		       sum(new_sale_money) newSaleMoney,
		       sum(after_marsale_money) afterMarsaleMoney,
		       sum(bag_money) bagMoney,
		       count(1) as customerNum,
		       sum(flag) companyId
		  from(
			SELECT sp.*, CASE WHEN cu.`created_time`&gt;=#{startTime}
			   and cu.`created_time`&lt;=#{endTime} THEN 1 ELSE 0 END flag
			  FROM `salesman_performance` sp
			  LEFT JOIN `customer_user` cu on sp.`company_id`= cu.`id`) t
		 where t.count_date&gt;=#{startTime}
		   AND t.count_date&lt;=#{endTime}
		 GROUP BY t.interface_man  ) t where t.saleMoney &lt;&gt; 0 ORDER BY t.afterMarsaleMoney desc
		limit ${start},${pageSize}
  </select>
</mapper>