<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.b2b.common.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.b2b.common.domain.Order" >
    <id column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="total_num" property="totalNum" jdbcType="INTEGER" />
    <result column="total_fee" property="totalFee" jdbcType="BIGINT" />
    <result column="total_cost" property="totalCost" jdbcType="BIGINT" />
    <result column="notax_inclusive_total_cost" property="notaxInclusiveTotalCost" jdbcType="BIGINT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="business_id" property="businessId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="executed_time" property="executedTime" jdbcType="TIMESTAMP" />
    <result column="sign" property="sign" jdbcType="INTEGER" />
    <result column="discount" property="discount" jdbcType="DECIMAL" />
    <result column="comfirm" property="comfirm" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="zhidan" property="zhidan" jdbcType="VARCHAR" />
    <result column="peisong" property="peisong" jdbcType="VARCHAR" />
    <result column="fenjian" property="fenjian" jdbcType="VARCHAR" />
    <result column="sourcing_id" property="sourcingId" jdbcType="VARCHAR" />
    <result column="deliver_date" property="deliverDate" jdbcType="TIMESTAMP" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_no, total_num, total_fee, total_cost, notax_inclusive_total_cost, created_time, 
    order_status, user_id, business_id, status, address, memo, executed_time, sign, discount, 
    comfirm, flag, zhidan, peisong, fenjian, sourcing_id, deliver_date, city_id, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.b2b.common.domain.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from `order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitFlag">
		limit ${start},${limit} 
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from `order`
    where order_no = #{orderNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from `order`
    where order_no = #{orderNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.b2b.common.domain.OrderExample" >
    delete from `order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.b2b.common.domain.Order" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `order` (order_no, total_num, total_fee, 
      total_cost, notax_inclusive_total_cost, created_time, 
      order_status, user_id, business_id, 
      status, address, memo, 
      executed_time, sign, discount, 
      comfirm, flag, zhidan, 
      peisong, fenjian, sourcing_id, 
      deliver_date, city_id, type
      )
    values (#{orderNo,jdbcType=VARCHAR}, #{totalNum,jdbcType=INTEGER}, #{totalFee,jdbcType=BIGINT}, 
      #{totalCost,jdbcType=BIGINT}, #{notaxInclusiveTotalCost,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{orderStatus,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{businessId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, 
      #{executedTime,jdbcType=TIMESTAMP}, #{sign,jdbcType=INTEGER}, #{discount,jdbcType=DECIMAL}, 
      #{comfirm,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, #{zhidan,jdbcType=VARCHAR}, 
      #{peisong,jdbcType=VARCHAR}, #{fenjian,jdbcType=VARCHAR}, #{sourcingId,jdbcType=VARCHAR}, 
      #{deliverDate,jdbcType=TIMESTAMP}, #{cityId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.b2b.common.domain.Order" >
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="totalNum != null" >
        total_num,
      </if>
      <if test="totalFee != null" >
        total_fee,
      </if>
      <if test="totalCost != null" >
        total_cost,
      </if>
      <if test="notaxInclusiveTotalCost != null" >
        notax_inclusive_total_cost,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="businessId != null" >
        business_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="executedTime != null" >
        executed_time,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="comfirm != null" >
        comfirm,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="zhidan != null" >
        zhidan,
      </if>
      <if test="peisong != null" >
        peisong,
      </if>
      <if test="fenjian != null" >
        fenjian,
      </if>
      <if test="sourcingId != null" >
        sourcing_id,
      </if>
      <if test="deliverDate != null" >
        deliver_date,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="totalNum != null" >
        #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="totalCost != null" >
        #{totalCost,jdbcType=BIGINT},
      </if>
      <if test="notaxInclusiveTotalCost != null" >
        #{notaxInclusiveTotalCost,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="businessId != null" >
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="executedTime != null" >
        #{executedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="comfirm != null" >
        #{comfirm,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="zhidan != null" >
        #{zhidan,jdbcType=VARCHAR},
      </if>
      <if test="peisong != null" >
        #{peisong,jdbcType=VARCHAR},
      </if>
      <if test="fenjian != null" >
        #{fenjian,jdbcType=VARCHAR},
      </if>
      <if test="sourcingId != null" >
        #{sourcingId,jdbcType=VARCHAR},
      </if>
      <if test="deliverDate != null" >
        #{deliverDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.b2b.common.domain.OrderExample" resultType="java.lang.Integer" >
    select count(*) from `order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update `order`
    <set >
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.totalNum != null" >
        total_num = #{record.totalNum,jdbcType=INTEGER},
      </if>
      <if test="record.totalFee != null" >
        total_fee = #{record.totalFee,jdbcType=BIGINT},
      </if>
      <if test="record.totalCost != null" >
        total_cost = #{record.totalCost,jdbcType=BIGINT},
      </if>
      <if test="record.notaxInclusiveTotalCost != null" >
        notax_inclusive_total_cost = #{record.notaxInclusiveTotalCost,jdbcType=BIGINT},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.businessId != null" >
        business_id = #{record.businessId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.executedTime != null" >
        executed_time = #{record.executedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sign != null" >
        sign = #{record.sign,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=DECIMAL},
      </if>
      <if test="record.comfirm != null" >
        comfirm = #{record.comfirm,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.zhidan != null" >
        zhidan = #{record.zhidan,jdbcType=VARCHAR},
      </if>
      <if test="record.peisong != null" >
        peisong = #{record.peisong,jdbcType=VARCHAR},
      </if>
      <if test="record.fenjian != null" >
        fenjian = #{record.fenjian,jdbcType=VARCHAR},
      </if>
      <if test="record.sourcingId != null" >
        sourcing_id = #{record.sourcingId,jdbcType=VARCHAR},
      </if>
      <if test="record.deliverDate != null" >
        deliver_date = #{record.deliverDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order
    set order_no = #{record.orderNo,jdbcType=VARCHAR},
      total_num = #{record.totalNum,jdbcType=INTEGER},
      total_fee = #{record.totalFee,jdbcType=BIGINT},
      total_cost = #{record.totalCost,jdbcType=BIGINT},
      notax_inclusive_total_cost = #{record.notaxInclusiveTotalCost,jdbcType=BIGINT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      business_id = #{record.businessId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      executed_time = #{record.executedTime,jdbcType=TIMESTAMP},
      sign = #{record.sign,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=DECIMAL},
      comfirm = #{record.comfirm,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=INTEGER},
      zhidan = #{record.zhidan,jdbcType=VARCHAR},
      peisong = #{record.peisong,jdbcType=VARCHAR},
      fenjian = #{record.fenjian,jdbcType=VARCHAR},
      sourcing_id = #{record.sourcingId,jdbcType=VARCHAR},
      deliver_date = #{record.deliverDate,jdbcType=TIMESTAMP},
      city_id = #{record.cityId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.b2b.common.domain.Order" >
    update `order`
    <set >
      <if test="totalNum != null" >
        total_num = #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="totalCost != null" >
        total_cost = #{totalCost,jdbcType=BIGINT},
      </if>
      <if test="notaxInclusiveTotalCost != null" >
        notax_inclusive_total_cost = #{notaxInclusiveTotalCost,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="businessId != null" >
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="executedTime != null" >
        executed_time = #{executedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="comfirm != null" >
        comfirm = #{comfirm,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="zhidan != null" >
        zhidan = #{zhidan,jdbcType=VARCHAR},
      </if>
      <if test="peisong != null" >
        peisong = #{peisong,jdbcType=VARCHAR},
      </if>
      <if test="fenjian != null" >
        fenjian = #{fenjian,jdbcType=VARCHAR},
      </if>
      <if test="sourcingId != null" >
        sourcing_id = #{sourcingId,jdbcType=VARCHAR},
      </if>
      <if test="deliverDate != null" >
        deliver_date = #{deliverDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where order_no = #{orderNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.b2b.common.domain.Order" >
    update `order`
    set total_num = #{totalNum,jdbcType=INTEGER},
      total_fee = #{totalFee,jdbcType=BIGINT},
      total_cost = #{totalCost,jdbcType=BIGINT},
      notax_inclusive_total_cost = #{notaxInclusiveTotalCost,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      order_status = #{orderStatus,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      business_id = #{businessId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      executed_time = #{executedTime,jdbcType=TIMESTAMP},
      sign = #{sign,jdbcType=INTEGER},
      discount = #{discount,jdbcType=DECIMAL},
      comfirm = #{comfirm,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      zhidan = #{zhidan,jdbcType=VARCHAR},
      peisong = #{peisong,jdbcType=VARCHAR},
      fenjian = #{fenjian,jdbcType=VARCHAR},
      sourcing_id = #{sourcingId,jdbcType=VARCHAR},
      deliver_date = #{deliverDate,jdbcType=TIMESTAMP},
      city_id = #{cityId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where order_no = #{orderNo,jdbcType=VARCHAR}
  </update>
  <select id="findOrderInfoByDate" resultType="hashmap">
  	SELECT
	o.order_no orderNo,
	cu.company_name companyName,
	o.total_fee totalFee,
	o.executed_time executedTime,
	o.memo 
	FROM
		`order` o
	LEFT JOIN customer_user cu ON o.user_id = cu.id
	WHERE
		o.`status` = 1
	<if test="startTime!=null">
		AND o.executed_time &gt;= #{startTime}
	</if>
	<if test="endTime!=null">
		AND o.executed_time &lt;= #{endTime}
	</if>
	<if test="orderNo!=null">
		AND o.order_no = #{orderNo}
	</if>
	<if test="userId!=null" >
		AND o.user_id = #{userId}
	</if>
	ORDER BY executed_time DESC
  </select>
  <select id="findNearestTimeByUserId" resultType="date">
  	SELECT MAX(executed_time) FROM `order` WHERE `user_id` = #{id}
  </select>
  <select id="findByTimeAndCityId" resultType="Order">
  	SELECT total_cost totalCost FROM `order` WHERE STATUS = 1 and city_id =#{cityId} and `created_time`  &gt;= #{start} and `created_time` &lt;= #{end}
  </select>
  <select id="countMoneyByUserAndTime" resultType="int">
  	SELECT IFNULL(SUM(o.total_fee),0)
	FROM `order` o 
	WHERE o.user_id=#{id} AND o.executed_time &gt;= #{firstDate} and o.executed_time&lt;= #{sumDate}
  </select>
  <select id="countNumByUserAndTime" resultType="int">
  	SELECT IFNULL(count(1),0)
	FROM `order` o 
	WHERE o.user_id=#{id} AND o.executed_time &gt;= #{firstDate} and o.executed_time &lt;= #{sumDate}
  </select>
  <select id="findLastTwoOrderItemByCid" resultType="int">
  	SELECT oi.`item_id`
	  FROM(
	SELECT `order_no`
	  FROM `order`
	 where `status`= 1
	   and `user_id`= #{customerId}
	 ORDER BY `created_time` desc
	 LIMIT 0, 2) t
	  LEFT JOIN `order_item` oi on t.order_no= oi.`order_no`
	 GROUP BY oi.`item_id`
  </select>
  <select id="countMoneyByUserAndTimeAndSign" resultType="int">
  	SELECT IFNULL(SUM(o.total_fee),0)
	FROM `order` o 
	WHERE o.user_id=#{id} AND o.executed_time &gt;= #{firstDate} and o.executed_time&lt;= #{sumDate} and o.sign=#{sign}
  </select>
  <select id="findShopOrderByCompanyId" resultType="long">
  	SELECT
		IFNULL(SUM(`total_fee`), 0) total
	FROM
		`order`
	WHERE
		comfirm = 2
	AND STATUS = 1
	AND `user_id` = #{customerUserId}
	OR comfirm = 0
	AND STATUS = 1
	AND `user_id` = #{customerUserId}
  </select>
  <select id="findShopOrderListByCompanyId" resultType="Order">
  	SELECT `order_no` orderNo,`executed_time` executedTime,`total_fee` totalFee,comfirm,flag FROM `order` WHERE  status=1 and `user_id` =#{shopId} ORDER BY executed_time DESC 
  </select>
  <select id="findCurrentMonthSourcingMoney" resultType="long">
  	SELECT IFNULL(SUM(total_fee),0) FROM `order` WHERE DATE_FORMAT(executed_time,'%Y%m') = DATE_FORMAT(NOW(),'%Y%m') and `status` = 1 and user_id = #{shopId}
  </select>
  <select id="findConfirm" resultMap="BaseResultMap">
   SELECT * FROM `order` WHERE `status` =1 AND `comfirm` =3 AND `executed_time` &gt;= #{firstDate} AND `executed_time` &lt;=#{sumDate}
  </select>
  <select id="findBeComfirmOrderNumByCityId" resultType="int">
  	SELECT COUNT(1) FROM `order` WHERE `status` = 1 AND comfirm = 0 and city_id = #{cityId}
  </select>
  <select id="findOrderNumByMonth" resultType="int">
  	SELECT COUNT(1) FROM `order` WHERE `status` =1 and date_format(`executed_time`,'%Y-%m') = date_format(#{date},'%Y-%m') and `user_id` = #{id}
  </select>
  <select id="findCurrentMonthFreeShopOrderFee" resultType="Order">
  	SELECT IFNULL(SUM(total_fee),0) totalFee,COUNT(1) totalNum FROM `order` WHERE DATE_FORMAT(executed_time,'%Y%m%d') &gt;= DATE_FORMAT(#{start},'%Y%m%d') and DATE_FORMAT(executed_time,'%Y%m%d') &lt;= DATE_FORMAT(#{end},'%Y%m%d')  and `status` = 1 and user_id = #{id}
  </select>
  <select id="findFreeOrderShopNum" resultType="int">
  	SELECT COUNT(1)
	  FROM(
	SELECT o.`user_id`
	  FROM `order` o
	  LEFT JOIN `customer_user` cu on o.`user_id`= cu.`id`
	 WHERE o.`status`= 1
	   and o.`executed_time`&gt;= #{start}
	   and o.`executed_time`&lt;= #{end}
	   and cu.`iswxvip`&lt;&gt; 3
	 GROUP BY o.`user_id`) t
  </select>
  <select id="findFreeOrderFeeAndOrderNumByMonth" resultType="Order">
  SELECT IFNULL(SUM(o.`total_fee`),0) totalFee ,COUNT(1) totalNum
  FROM `order` o
  LEFT JOIN `customer_user` cu on o.`user_id`= cu.`id`
 WHERE o.`status`= 1
	   and o.`executed_time`&gt;= #{start}
	   and o.`executed_time`&lt;= #{end}
	   and cu.`iswxvip`&lt;&gt; 3
  </select>
  <select id="findgongdan" resultType="Order">
  	SELECT
		cu.user_name userName,r.name region,o.executed_time,o.created_time,o.order_no,o.total_fee,o.zhidan,o.peisong,o.fenjian,o.memo,o.deliver_date
	FROM
		`order` o
	LEFT JOIN customer_user cu ON o.user_id = cu.id
	LEFT JOIN `reseau` r on cu.`reseau_id` =r.id
	<where>
	    and o.status=1 and o.city_id = #{cityId}
		<if test="startTime !=null and startTime != ''">
			and o.executed_time &gt;= #{startTime}
		</if>
		<if test="endTime !=null and endTime != ''">
			and o.executed_time &lt;= #{endTime}
		</if>
		<if test="orderNum !=null and orderNum != ''">
			and o.order_no = #{orderNum}
		</if>
		<if test="userName !=null and userName != ''">
			and cu.user_name like '%${userName}%'
		</if>
		<if test="region !=null and region != ''">
			and cu.region = #{region}
		</if>
		<if test="zhidan !=null and zhidan != ''">
			and o.zhidan = #{zhidan}
		</if>
		<if test="reseauId !=null and reseauId != ''">
			and cu.reseau_id = #{reseauId}
		</if>
		<if test="fenjian !=null and fenjian != ''">
			and o.fenjian = #{fenjian}
		</if>
		<if test="peisong !=null and peisong != ''">
			and o.peisong = #{peisong}
		</if>
		<if test="type==3">
			and cu.iswxvip = 3
		</if>
		<if test="type==2">
			and cu.iswxvip = 0
		</if>
		<if test="type==1">
			and cu.iswxvip = 1
		</if>
	</where>
	order by o.executed_time desc,o.created_time desc
  </select>
  <select id="findgongdanCount" resultType="Order">
  		SELECT
		SUM(o.`total_fee`) totalFee,COUNT(1) totalNum
	FROM
		`order` o
	LEFT JOIN customer_user cu ON o.user_id = cu.id
	<where>
	    and o.status=1 and o.city_id =#{cityId}
		<if test="startTime !=null and startTime != ''">
			and o.executed_time &gt;= #{startTime}
		</if>
		<if test="endTime !=null and endTime != ''">
			and o.executed_time &lt;= #{endTime}
		</if>
		<if test="orderNum !=null and orderNum != ''">
			and o.order_no = #{orderNum}
		</if>
		<if test="userName !=null and userName != ''">
			and cu.user_name like '%${userName}%'
		</if>
		<if test="region !=null and region != ''">
			and cu.region = #{region}
		</if>
		<if test="reseauId !=null and reseauId != ''">
			and cu.reseau_id = #{reseauId}
		</if>
		<if test="zhidan !=null and zhidan != ''">
			and o.zhidan = #{zhidan}
		</if>
		<if test="fenjian !=null and fenjian != ''">
			and o.fenjian = #{fenjian}
		</if>
		<if test="peisong !=null and peisong != ''">
			and o.peisong = #{peisong}
		</if>
		<if test="type==3">
			and cu.iswxvip = 3
		</if>
		<if test="type==2">
			and cu.iswxvip = 0
		</if>
		<if test="type==1">
			and cu.iswxvip = 1
		</if>
	</where>
  </select>
  <select id="findConfirmNoOnshelf" resultMap="BaseResultMap">
  	 SELECT * FROM `order` WHERE `status` =1 AND flag=0 and `comfirm` =3 AND  `executed_time` &gt;= #{firstDate} AND `executed_time` &lt;=#{sumDate}
  </select>
  <select id="findGiftOrdersByCondition" resultType="Order">
  	SELECT
		o.order_no orderNo,
		cu.user_name userName,
		o.total_fee totalFee,
		o.discount,
		o.memo,o.executed_time,
		cu.interface_person buyerName
	FROM
		`order` o
	LEFT JOIN customer_user cu ON o.user_id = cu.id
	WHERE o.`status`=1 and o.city_id = #{cityId} and cu.iswxvip=1
	<if test="startTime !=null and startTime !=''">
		and o.executed_time &gt;= #{startTime }
	</if>
	<if test="endTime !=null and endTime !=''">
		and o.executed_time &lt;= #{endTime }
	</if>
	<if test="orderNum !=null and orderNum !=''">
		and o.order_no = #{orderNum }
	</if>
	<if test="userName !=null and userName !=''">
		and cu.user_name = #{userName }
	</if>
	order by o.executed_time desc
  </select>
  <select id="findTotalGiftOrdersByCondition" resultType="Order">
  	SELECT
			SUM(total_fee) totalFee,COUNT(1) totalNum
	FROM
		`order` o
	LEFT JOIN customer_user cu ON o.user_id = cu.id
	WHERE o.`status`=1 and o.city_id=#{cityId} and cu.iswxvip=1
	<if test="startTime !=null and startTime !=''">
		and o.executed_time &gt;= #{startTime }
	</if>
	<if test="endTime !=null and endTime !=''">
		and o.executed_time &lt;= #{endTime }
	</if>
	<if test="orderNum !=null and orderNum !=''">
		and o.order_no = #{orderNum }
	</if>
	<if test="userName !=null and userName !=''">
		and cu.user_name = #{userName }
	</if>
  </select>
  <select id="findProfitByUserIdAndDate" resultType="Order">
  SELECT
		round(
			SUM(t.sourcing) - SUM(t.refund) - SUM(cost) + SUM(cost_fee)
		) totalFee,
		round(
			SUM(t.sourcing) - SUM(t.refund)
		) totalCost
	FROM
		(
			SELECT
				SUM(`total_fee` * `discount`) sourcing,
				0 refund,
				SUM(`total_cost`) cost,
				0 cost_fee
			FROM
				`order`
			WHERE
				`status` = 1
			AND `user_id` = #{userid} and `executed_time` &gt;= #{startTime} and `executed_time` &lt;= #{endTime}
			UNION ALL
				SELECT
					0 sourcing,
					SUM(`total_fee` * `discount`) refund,
					0 cost,
					SUM(cost_fee) cost_fee
				FROM
					`refund`
				WHERE
					state = 1
				AND `user_id` = #{userid} and `executed_time` &gt;= #{startTime} and `executed_time` &lt;= #{endTime}
		) t
  </select>
  <select id="findLastTimeByItemId" resultType="date">
  SELECT o.executed_time FROM order_item oi LEFT JOIN `order` o on oi.order_no=o.order_no WHERE oi.item_id=#{itemId} ORDER BY o.executed_time desc LIMIT 1
  </select>
  <select id="findByReseauIdAndDate" resultType="order">
  	SELECT cu.`user_name` userName,o.order_no orderNo,
       o.`total_fee` totalFee,
       o.`memo`,
       o.`deliver_date` deliverDate,
      if(date_format(o.`deliver_date`, '%Y-%m-%d') = date_format(#{queryDate},'%Y-%m-%d'),1,0) sign
  FROM `order` o
  LEFT JOIN `customer_user` cu on o.`user_id`= cu.`id`
 where o.status = 1 and cu.`reseau_id`= #{reseauId}
   and date_format(o.`executed_time`,'%Y-%m-%d')= date_format(#{queryDate},'%Y-%m-%d')
  </select>
  <select id="findPendingDeliveryByDate" resultType="String">
  	SELECT order_no FROM `order` WHERE `status` = 1 and comfirm =2 and executed_time &gt;= #{firstDate} and executed_time &lt;= #{sumDate}
  </select>
  <update id="changeComfirmStatus">
  	UPDATE `order` SET comfirm = 3 , flag = 0 WHERE order_no in 
  	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
  		#{item}
  	</foreach>
  </update>
  <resultMap type="com.b2b.common.domain.Order" id="orderItemMap" autoMapping="true">
  		<id column="order_no" property="orderNo"/>
  		<collection property="orderItemList" javaType="List" column="order_no" ofType="OrderItem" select="selectOrderItems">
  		</collection>
  </resultMap>
  <select id="selectOrderItems" resultType="OrderItem">
  	SELECT `id`,
       `order_no`,
       `item_id`,
       `item_name`,
       `num`,
       `fee`,
       `item_price`,
       `item_size`,
       `item_cost_price`,
       `notax_inclusive_cost_price`,
       `item_size_type`,
       `consume_stock_num`
  FROM `order_item`
 WHERE `order_no`= #{order_no}
  </select>
  <select id="findOrderAndOrderItemByCondition" resultMap="orderItemMap">
  	SELECT o.`order_no`,
       o.`total_num`,
       o.`total_fee`,
       o.`total_cost`,
       o.`notax_inclusive_total_cost`,
       o.`created_time`,
       o.`order_status`,
       o.`user_id`,
       o.`business_id`,
       o.`status`,
       o.`address`,
       o.`memo`,
       o.`executed_time`,
       o.`sign`,
       o.`discount`,
       o.`comfirm`,
       o.`flag`,
       o.`zhidan`,
       o.`peisong`,
       o.`fenjian`,
       o.`sourcing_id`,
       o.`deliver_date`,
       cu.`company_name` companyName,
       cu.`user_name` userName,
       cu.`company_memo` companyMemo,
       cu.`pay_bill_way` payBillWay,
       concat(cu.`likeman`, cu.`mobile_phone`) buyerPhone,su.nick_name nickName
  FROM `order` o
  LEFT JOIN `customer_user` cu on o.`user_id`= cu.`id`
  left join shop_user su on o.sourcing_id = su.openid
 where o.`status`= 1 and o.city_id =#{cityId}
 <if test="userName !=null and userName !=''">
 	and cu.user_name like '%${userName}%'
 </if>
 <if test="itemName != '' and itemName != null">
 	and o.order_no in (SELECT `order_no`   from `order_item`  WHERE `item_name` LIKE '%${itemName}%')
 </if>
 <if test="param == 1">
 	and o.`comfirm` = 0 
 </if>
 <if test="param == 2">
 	and o.`order_status` &lt;&gt; 2
 </if>
 <if test="startTime !=null and startTime !=''">
 	and o.`executed_time` &gt;= #{startTime}
 </if>
 <if test="endTime !=null and endTime !=''">
 	and o.`executed_time` &lt;= #{endTime}
 </if>
 <if test="orderNum !=null and orderNum !=''">
 and o.`order_no` = #{orderNum}
 </if>
 order by executed_time desc,
         created_time desc
  </select>
  <select id="findConfirmByCityId" resultMap="BaseResultMap">
   SELECT * FROM `order` WHERE `status` =1 AND `comfirm` =3 and city_id =#{cityId} AND `executed_time` &gt;= #{firstDate} AND `executed_time` &lt;=#{sumDate}
  </select>
  <select id="findConfirmNoOnshelfByCityId" resultMap="BaseResultMap">
  	 SELECT * FROM `order` WHERE `status` =1 AND flag=0 and `comfirm` =3 and city_id =#{cityId} AND  `executed_time` &gt;= #{firstDate} AND `executed_time` &lt;=#{sumDate}
  </select>
  <select id="findPendingDeliveryByDateAndCityId" resultType="String">
  	SELECT order_no FROM `order` WHERE `status` = 1 and comfirm =2 and city_id =#{cityId} and executed_time &gt;= #{firstDate} and executed_time &lt;= #{sumDate}
  </select>
  <select id="findOrderFeeAndOrderNumByDayAndUserId" resultType="order">
  	SELECT IFNULL(SUM(o.`total_fee`), 0) totalFee,
	       COUNT(1) totalNum
	  FROM `order` o
	 WHERE o.`status`= 1
	   and o.`user_id`= #{userid}
	   and date_format(o.`executed_time`, '%Y-%m-%d')= date_format(#{date}, '%Y-%m-%d')
  </select>
  <select id="findsixtyDayOrder" resultMap="BaseResultMap">
  		SELECT *  FROM `order` WHERE `status` =1 and datediff(now(),`executed_time` ) &gt;0 and datediff(now(),`executed_time` ) &lt;=60 and `user_id` =#{id}
  </select>
</mapper>