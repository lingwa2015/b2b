<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.b2b.common.dao.ItemCategoryMapper" >
  <resultMap id="BaseResultMap" type="com.b2b.common.domain.ItemCategory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="category_weight" property="categoryWeight" jdbcType="DECIMAL" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="created_userid" property="createdUserid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="business_id" property="business_id" jdbcType="INTEGER" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="updated_userid" property="updatedUserid" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
    <result column="is_show" property="isShow" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, category_weight, category_name, warehouse_id, parent_id, created_time, created_userid, 
    status, business_id, updated_time, updated_userid, score, city_id, is_show
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.b2b.common.domain.ItemCategoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitFlag">
		limit ${start},${limit}
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from item_category
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from item_category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.b2b.common.domain.ItemCategoryExample" >
    delete from item_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.b2b.common.domain.ItemCategory" >
  <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
   insert into item_category (id, category_weight, category_name, 
      warehouse_id, parent_id, created_time, 
      created_userid, status, business_id, 
      updated_time, updated_userid, score, 
      city_id, is_show)
    values (#{id,jdbcType=INTEGER}, #{categoryWeight,jdbcType=DECIMAL}, #{categoryName,jdbcType=VARCHAR}, 
      #{warehouseId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{createdUserid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{business_id,jdbcType=INTEGER}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{updatedUserid,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, 
      #{cityId,jdbcType=INTEGER}, #{isShow,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.b2b.common.domain.ItemCategory" >
    insert into item_category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="categoryWeight != null" >
        category_weight,
      </if>
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="warehouseId != null" >
        warehouse_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="createdUserid != null" >
        created_userid,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="business_id != null" >
        business_id,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="updatedUserid != null" >
        updated_userid,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="isShow != null" >
        is_show,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryWeight != null" >
        #{categoryWeight,jdbcType=DECIMAL},
      </if>
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null" >
        #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUserid != null" >
        #{createdUserid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="business_id != null" >
        #{business_id,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUserid != null" >
        #{updatedUserid,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        #{isShow,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.b2b.common.domain.ItemCategoryExample" resultType="java.lang.Integer" >
    select count(*) from item_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="countId" resultType="int">
  		SELECT count(1) FROM item_category where parent_id = #{id}
  </select>
  <select id="findAllPage" resultType="hashmap">
	select * from (
	select id,category_name parentname,'' levelname,id as parent_id,score,is_show isShow from item_category parent where parent_id is null and  `status`=1 and city_id = #{cityId}
	union all
	select id,'' parentname,category_name levelname,parent_id,score,is_show isShow from item_category parent where parent_id is not null and `status`=1 and city_id = #{cityId}
	)as info 
	order by parent_id,id asc limit ${start},${pageSize}
	
  </select>
  <select id="findWithTwoCat" resultType="hashmap">
  		SELECT
			i.id,
			i.category_name categoryName,
		    i.parent_id parentId,
		    i.category_weight categoryWeight,
			ic.category_name parentname,i.score,i.is_show isShow
		FROM
			item_category i
		LEFT JOIN item_category ic ON i.parent_id = ic.id
		WHERE
			i.id = #{id}
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update item_category
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.categoryWeight != null" >
        category_weight = #{record.categoryWeight,jdbcType=DECIMAL},
      </if>
      <if test="record.categoryName != null" >
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.warehouseId != null" >
        warehouse_id = #{record.warehouseId,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdUserid != null" >
        created_userid = #{record.createdUserid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.business_id != null" >
        business_id = #{record.business_id,jdbcType=INTEGER},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedUserid != null" >
        updated_userid = #{record.updatedUserid,jdbcType=INTEGER},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.isShow != null" >
        is_show = #{record.isShow,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update item_category
    set id = #{record.id,jdbcType=INTEGER},
      category_weight = #{record.categoryWeight,jdbcType=DECIMAL},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      warehouse_id = #{record.warehouseId,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      created_userid = #{record.createdUserid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      business_id = #{record.business_id,jdbcType=INTEGER}
	updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      updated_userid = #{record.updatedUserid,jdbcType=INTEGER}
      score = #{record.score,jdbcType=INTEGER}
      city_id = #{record.cityId,jdbcType=INTEGER},
      is_show = #{record.isShow,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.b2b.common.domain.ItemCategory" >
    update item_category
    <set >
      <if test="categoryWeight != null" >
        category_weight = #{categoryWeight,jdbcType=DECIMAL},
      </if>
      <if test="categoryName != null" >
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null" >
        warehouse_id = #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUserid != null" >
        created_userid = #{createdUserid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="business_id != null" >
        business_id = #{business_id,jdbcType=INTEGER},
      </if>
	 <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUserid != null" >
        updated_userid = #{updatedUserid,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        is_show = #{isShow,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.b2b.common.domain.ItemCategory" >
    update item_category
    set category_weight = #{categoryWeight,jdbcType=DECIMAL},
      category_name = #{categoryName,jdbcType=VARCHAR},
      warehouse_id = #{warehouseId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_userid = #{createdUserid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      business_id = #{business_id,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_userid = #{updatedUserid,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      is_show = #{isShow,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAllEXOther" resultMap="BaseResultMap">
  	SELECT * from item_category WHERE id not IN (63) and parent_id is NULL AND `status` = 1 order By score
  </select>
  <select id="findCatByParentId" resultMap="BaseResultMap">
  	SELECT * from item_category WHERE `status`=1 AND parent_id = #{id}
  </select>
  <select id="findCatOrderByScore" resultMap="BaseResultMap">
  	SELECT * FROM `item_category` where `status` =1 and `parent_id` IS NULL ORDER BY score
  </select>
  <select id="findAllOneCatsByCityId" resultMap="BaseResultMap">
  	SELECT * FROM item_category WHERE `status` = 1 and parent_id is NULL and city_id = #{cityId}
  </select>
  <select id="findAllTwoCatsByCityId" resultMap="BaseResultMap">
  	SELECT * FROM item_category WHERE `status` = 1 and parent_id is not NULL and city_id = #{cityId}
  </select>
  <select id="findCatByParentIdAndCityId" resultMap="BaseResultMap">
  	SELECT * FROM item_category WHERE `status` = 1 and parent_id = #{categoryId} and city_id = #{cityId}
  </select>
  <select id="findAllEXOtherByCityId" resultMap="BaseResultMap">
  	SELECT * from item_category WHERE id not IN (63,163) and parent_id is NULL AND `status` = 1 and city_id =#{cityId} order By score
  </select>
  <select id="findOfficeCatIdByCityId" resultMap="BaseResultMap">
  	SELECT
		*
	FROM
		item_category
	WHERE
		`status` = 1
	AND parent_id IS NULL
	AND city_id =#{cityId}
	AND category_name = '办公用品'
	LIMIT 1
  </select>
  <select id="findByNameAndCityId" resultMap="BaseResultMap">
    SELECT * FROM item_category
    WHERE `status` =1 AND city_id = #{cityId} AND category_name = #{categoryName}
    <if test="parentId == 0">
      AND  parent_id is null
    </if>
    <if test="parentId != 0">
      AND  parent_id = #{parentId}
    </if>
  </select>
  <select id="findByCityIdAndIsshow" resultMap="BaseResultMap">
  SELECT * from item_category WHERE parent_id is NULL AND `status` = 1 and city_id =#{cityId} and is_show = #{isshow} order By score
  </select>
</mapper>