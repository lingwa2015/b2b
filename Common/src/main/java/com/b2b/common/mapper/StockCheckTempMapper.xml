<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.b2b.common.dao.StockCheckTempMapper" >
  <resultMap id="BaseResultMap" type="com.b2b.common.domain.StockCheckTemp" >
    <id column="item_id" property="itemId" jdbcType="INTEGER" />
    <result column="item_name" property="itemName" jdbcType="VARCHAR" />
    <result column="modify_num" property="modifyNum" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="old_num" property="oldNum" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    item_id, item_name, modify_num, user_name, user_id, old_num, created, city_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.b2b.common.domain.StockCheckTempExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from stock_check_temp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from stock_check_temp
    where item_id = #{itemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stock_check_temp
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.b2b.common.domain.StockCheckTempExample" >
    delete from stock_check_temp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteAll" parameterType="int" >
    delete from stock_check_temp where item_id in
    <foreach item="itemid" collection="array" open="(" separator="," close=")">
    	#{itemid}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.b2b.common.domain.StockCheckTemp" >
    insert into stock_check_temp (item_id, item_name, modify_num, 
      user_name, user_id, old_num, 
      created, city_id)
    values (#{itemId,jdbcType=INTEGER}, #{itemName,jdbcType=VARCHAR}, #{modifyNum,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{oldNum,jdbcType=INTEGER}, 
      #{created,jdbcType=TIMESTAMP}, #{cityId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.b2b.common.domain.StockCheckTemp" >
    insert into stock_check_temp
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="itemName != null" >
        item_name,
      </if>
      <if test="modifyNum != null" >
        modify_num,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="oldNum != null" >
        old_num,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="modifyNum != null" >
        #{modifyNum,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="oldNum != null" >
        #{oldNum,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.b2b.common.domain.StockCheckTempExample" resultType="java.lang.Integer" >
    select count(*) from stock_check_temp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update stock_check_temp
    <set >
      <if test="record.itemId != null" >
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.itemName != null" >
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyNum != null" >
        modify_num = #{record.modifyNum,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.oldNum != null" >
        old_num = #{record.oldNum,jdbcType=INTEGER},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update stock_check_temp
    set item_id = #{record.itemId,jdbcType=INTEGER},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      modify_num = #{record.modifyNum,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      old_num = #{record.oldNum,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      city_id = #{record.cityId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.b2b.common.domain.StockCheckTemp" >
    update stock_check_temp
    <set >
      <if test="itemName != null" >
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="modifyNum != null" >
        modify_num = #{modifyNum,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="oldNum != null" >
        old_num = #{oldNum,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.b2b.common.domain.StockCheckTemp" >
    update stock_check_temp
    set item_name = #{itemName,jdbcType=VARCHAR},
      modify_num = #{modifyNum,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      old_num = #{oldNum,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      city_id = #{cityId,jdbcType=INTEGER}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
</mapper>