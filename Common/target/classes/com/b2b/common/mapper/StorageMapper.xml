<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.b2b.common.dao.StorageMapper" >
  <resultMap id="BaseResultMap" type="com.b2b.common.domain.Storage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="last_mod_user" property="lastModUser" jdbcType="INTEGER" />
    <result column="total_fee" property="totalFee" jdbcType="BIGINT" />
    <result column="executed_time" property="executedTime" jdbcType="TIMESTAMP" />
    <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
    <result column="purchase_flag" property="purchaseFlag" jdbcType="INTEGER" />
    <result column="purchase_id" property="purchaseId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, created_time, modified_time, state, last_mod_user, total_fee, executed_time, 
    supplier_id, number, city_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.b2b.common.domain.StorageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from storage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitFlag">
	  limit ${start},${limit}
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from storage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from storage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.b2b.common.domain.StorageExample" >
    delete from storage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.b2b.common.domain.Storage" >
   <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into storage (id, user_id, created_time, 
      modified_time, state, last_mod_user, 
      total_fee, executed_time, supplier_id, 
      number, city_id)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{modifiedTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{lastModUser,jdbcType=INTEGER}, 
      #{totalFee,jdbcType=BIGINT}, #{executedTime,jdbcType=TIMESTAMP}, #{supplierId,jdbcType=INTEGER}, 
      #{number,jdbcType=VARCHAR}, #{cityId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.b2b.common.domain.Storage" >
    insert into storage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="lastModUser != null" >
        last_mod_user,
      </if>
      <if test="totalFee != null" >
        total_fee,
      </if>
      <if test="executedTime != null" >
        executed_time,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="lastModUser != null" >
        #{lastModUser,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="executedTime != null" >
        #{executedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.b2b.common.domain.StorageExample" resultType="java.lang.Integer" >
    select count(*) from storage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update storage
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.lastModUser != null" >
        last_mod_user = #{record.lastModUser,jdbcType=INTEGER},
      </if>
      <if test="record.totalFee != null" >
        total_fee = #{record.totalFee,jdbcType=BIGINT},
      </if>
      <if test="record.executedTime != null" >
        executed_time = #{record.executedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.supplierId != null" >
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update storage
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      last_mod_user = #{record.lastModUser,jdbcType=INTEGER},
      total_fee = #{record.totalFee,jdbcType=BIGINT},
      executed_time = #{record.executedTime,jdbcType=TIMESTAMP},
      supplier_id = #{record.supplierId,jdbcType=INTEGER},
      number = #{record.number,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.b2b.common.domain.Storage" >
    update storage
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="lastModUser != null" >
        last_mod_user = #{lastModUser,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="executedTime != null" >
        executed_time = #{executedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.b2b.common.domain.Storage" >
    update storage
    set user_id = #{userId,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      last_mod_user = #{lastModUser,jdbcType=INTEGER},
      total_fee = #{totalFee,jdbcType=BIGINT},
      executed_time = #{executedTime,jdbcType=TIMESTAMP},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      number = #{number,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findByTimeAndCityId" resultType="com.b2b.common.domain.Storage">
  	SELECT id,
       `user_id` userId,
       `created_time` createdTime,
       `modified_time` modifiedTime,
       `state`,
       `last_mod_user` lastModUser,
       `total_fee` totalFee,
       `executed_time` executedTime,
       `supplier_id` supplierId
       FROM `storage` WHERE state = 1 and city_id =#{cityId} and `created_time` &gt;= #{start} and `created_time` &lt;= #{end}
  </select>
  <select id="countByCondition" resultType="int">
  	SELECT COUNT(1) from `storage` s LEFT JOIN supplier su on s.supplier_id = su.id
  	<where>
  		
  		and s.state =1 and s.city_id = #{cityId}
  		<if test="itemName!=null and itemName !=''">
  			and s.id in (SELECT `storage_id`  from `storage_item` WHERE `item_name` LIKE '%${itemName}%')
  		</if>
  		<if test="supplierName!=null and supplierName !=''">
  			and su.supplier_name like '%${supplierName}%'
  		</if>
  		<if test="numbers !=null and numbers !=''">
  			and s.number LIKE '%${numbers}%'
  		</if>
  		<if test="startTime !=null and startTime !=''">
  			and s.executed_time &gt;= #{startTime}
  		</if>
  		<if test="endTime !=null and endTime !=''">
  			and s.executed_time &lt;= #{endTime}
  		</if>
  	</where>
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap">
  		SELECT s.created_time createdTime,s.executed_time executedTime,s.id,s.last_mod_user lastModUser,s.modified_time modifiedTime,s.number,s.state,s.supplier_id supplierId,s.total_fee totalFee,s.user_id userId,su.supplier_name supplierName, if (LEFT(s.number ,14) = "From purchase:", 1, 0) purchase_flag, RIGHT(s.number ,10) purchase_id from `storage` s LEFT JOIN supplier su on s.supplier_id = su.id
  	<where>
  	    and s.state=1 and s.city_id = #{cityId}
  	    <if test="itemName!=null and itemName !=''">
  			and s.id in (SELECT `storage_id`  from `storage_item` WHERE `item_name` LIKE '%${itemName}%')
  		</if>
  		<if test="supplierName!=null and supplierName !=''">
  			and su.supplier_name like '%${supplierName}%'
  		</if>
  		<if test="numbers !=null and numbers !=''">
  			and s.number LIKE '%${numbers}%'
  		</if>
  		<if test="startTime !=null and startTime !=''">
  			and s.executed_time &gt;= #{startTime}
  		</if>
  		<if test="endTime !=null and endTime !=''">
  			and s.executed_time &lt;= #{endTime}
  		</if>
  	</where>
  	order by s.executed_time desc,s.id desc
  	limit #{start},#{pageSize}
  </select>
  <select id="selectById" resultMap="BaseResultMap">
  	SELECT
		s.created_time createdTime,
		s.executed_time executedTime,
		s.id,
		s.last_mod_user lastModUser,
		s.modified_time modifiedTime,
		s.number,
		s.state,
		s.supplier_id supplierId,
		s.total_fee totalFee,
		s.user_id userId,s.city_id cityId,
		su.supplier_name supplierName
	FROM
		`storage` s
	LEFT JOIN supplier su ON s.supplier_id = su.id
	where s.id= #{id}
  </select>
  <select id="findPurchaseBysupplierIdAndSumdate" resultMap="BaseResultMap">
    SELECT *
    FROM
        `storage` s
    WHERE s.state = 1
        AND LEFT(s.number ,14) = "From purchase:"
        AND DATE_FORMAT(#{sumdate}, '%Y-%m')  = DATE_FORMAT(s.executed_time,  '%Y-%m')
        AND s.supplier_id = #{supplierId}
    ORDER BY s.created_time DESC
  </select>
</mapper>