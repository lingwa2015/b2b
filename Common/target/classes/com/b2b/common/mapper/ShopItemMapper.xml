<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.b2b.common.dao.ShopItemMapper" >
    <resultMap id="BaseResultMap" type="com.b2b.common.domain.ShopItem" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="img_path" property="imgPath" jdbcType="VARCHAR" />
        <result column="sourcing_price" property="sourcingPrice" jdbcType="BIGINT" />
        <result column="market_price" property="marketPrice" jdbcType="BIGINT" />
        <result column="sale_price" property="salePrice" jdbcType="BIGINT" />
        <result column="size" property="size" jdbcType="VARCHAR" />
        <result column="num" property="num" jdbcType="INTEGER" />
        <result column="item_id" property="itemId" jdbcType="INTEGER" />
        <result column="shop_id" property="shopId" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="isdown" property="isdown" jdbcType="INTEGER" />
        <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
        <result column="onshelf_time" property="onshelfTime" jdbcType="TIMESTAMP" />
        <result column="layer_id" property="layerId" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, name, img_path, sourcing_price, market_price, sale_price, size, num, item_id,
        shop_id, status, isdown, updated_time, onshelf_time, layer_id
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.b2b.common.domain.ShopItemExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from shop_item
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from shop_item
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from shop_item
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.b2b.common.domain.ShopItemExample" >
        delete from shop_item
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.b2b.common.domain.ShopItem" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        insert into shop_item (id, name, img_path,
        sourcing_price, market_price, sale_price,
        size, num, item_id,
        shop_id, status, isdown,
        updated_time, onshelf_time, layer_id
        )
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{imgPath,jdbcType=VARCHAR},
        #{sourcingPrice,jdbcType=BIGINT}, #{marketPrice,jdbcType=BIGINT}, #{salePrice,jdbcType=BIGINT},
        #{size,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER},
        #{shopId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{isdown,jdbcType=INTEGER},
        #{updatedTime,jdbcType=TIMESTAMP}, #{onshelfTime,jdbcType=TIMESTAMP}, #{layerId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.b2b.common.domain.ShopItem" >
        insert into shop_item
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="imgPath != null" >
                img_path,
            </if>
            <if test="sourcingPrice != null" >
                sourcing_price,
            </if>
            <if test="marketPrice != null" >
                market_price,
            </if>
            <if test="salePrice != null" >
                sale_price,
            </if>
            <if test="size != null" >
                size,
            </if>
            <if test="num != null" >
                num,
            </if>
            <if test="itemId != null" >
                item_id,
            </if>
            <if test="shopId != null" >
                shop_id,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="isdown != null" >
                isdown,
            </if>
            <if test="updatedTime != null" >
                updated_time,
            </if>
            <if test="onshelfTime != null" >
                onshelf_time,
            </if>
            <if test="layerId != null" >
                layer_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="imgPath != null" >
                #{imgPath,jdbcType=VARCHAR},
            </if>
            <if test="sourcingPrice != null" >
                #{sourcingPrice,jdbcType=BIGINT},
            </if>
            <if test="marketPrice != null" >
                #{marketPrice,jdbcType=BIGINT},
            </if>
            <if test="salePrice != null" >
                #{salePrice,jdbcType=BIGINT},
            </if>
            <if test="size != null" >
                #{size,jdbcType=VARCHAR},
            </if>
            <if test="num != null" >
                #{num,jdbcType=INTEGER},
            </if>
            <if test="itemId != null" >
                #{itemId,jdbcType=INTEGER},
            </if>
            <if test="shopId != null" >
                #{shopId,jdbcType=INTEGER},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="isdown != null" >
                #{isdown,jdbcType=INTEGER},
            </if>
            <if test="updatedTime != null" >
                #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="onshelfTime != null" >
                #{onshelfTime,jdbcType=TIMESTAMP},
            </if>
            <if test="layerId != null" >
                #{layerId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.b2b.common.domain.ShopItemExample" resultType="java.lang.Integer" >
        select count(*) from shop_item
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update shop_item
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.imgPath != null" >
                img_path = #{record.imgPath,jdbcType=VARCHAR},
            </if>
            <if test="record.sourcingPrice != null" >
                sourcing_price = #{record.sourcingPrice,jdbcType=BIGINT},
            </if>
            <if test="record.marketPrice != null" >
                market_price = #{record.marketPrice,jdbcType=BIGINT},
            </if>
            <if test="record.salePrice != null" >
                sale_price = #{record.salePrice,jdbcType=BIGINT},
            </if>
            <if test="record.size != null" >
                size = #{record.size,jdbcType=VARCHAR},
            </if>
            <if test="record.num != null" >
                num = #{record.num,jdbcType=INTEGER},
            </if>
            <if test="record.itemId != null" >
                item_id = #{record.itemId,jdbcType=INTEGER},
            </if>
            <if test="record.shopId != null" >
                shop_id = #{record.shopId,jdbcType=INTEGER},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.isdown != null" >
                isdown = #{record.isdown,jdbcType=INTEGER},
            </if>
            <if test="record.updatedTime != null" >
                updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.onshelfTime != null" >
                onshelf_time = #{record.onshelfTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.layerId != null" >
                layer_id = #{record.layerId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update shop_item
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        img_path = #{record.imgPath,jdbcType=VARCHAR},
        sourcing_price = #{record.sourcingPrice,jdbcType=BIGINT},
        market_price = #{record.marketPrice,jdbcType=BIGINT},
        sale_price = #{record.salePrice,jdbcType=BIGINT},
        size = #{record.size,jdbcType=VARCHAR},
        num = #{record.num,jdbcType=INTEGER},
        item_id = #{record.itemId,jdbcType=INTEGER},
        shop_id = #{record.shopId,jdbcType=INTEGER},
        status = #{record.status,jdbcType=INTEGER},
        isdown = #{record.isdown,jdbcType=INTEGER},
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
        onshelf_time = #{record.onshelfTime,jdbcType=TIMESTAMP},
        layer_id = #{record.layerId,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.b2b.common.domain.ShopItem" >
        update shop_item
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="imgPath != null" >
                img_path = #{imgPath,jdbcType=VARCHAR},
            </if>
            <if test="sourcingPrice != null" >
                sourcing_price = #{sourcingPrice,jdbcType=BIGINT},
            </if>
            <if test="marketPrice != null" >
                market_price = #{marketPrice,jdbcType=BIGINT},
            </if>
            <if test="salePrice != null" >
                sale_price = #{salePrice,jdbcType=BIGINT},
            </if>
            <if test="size != null" >
                size = #{size,jdbcType=VARCHAR},
            </if>
            <if test="num != null" >
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="itemId != null" >
                item_id = #{itemId,jdbcType=INTEGER},
            </if>
            <if test="shopId != null" >
                shop_id = #{shopId,jdbcType=INTEGER},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="isdown != null" >
                isdown = #{isdown,jdbcType=INTEGER},
            </if>
            <if test="updatedTime != null" >
                updated_time = #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="onshelfTime != null" >
                onshelf_time = #{onshelfTime,jdbcType=TIMESTAMP},
            </if>
            <if test="layerId != null" >
                layer_id = #{layerId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.b2b.common.domain.ShopItem" >
    update shop_item
    set name = #{name,jdbcType=VARCHAR},
      img_path = #{imgPath,jdbcType=VARCHAR},
      sourcing_price = #{sourcingPrice,jdbcType=BIGINT},
      market_price = #{marketPrice,jdbcType=BIGINT},
      sale_price = #{salePrice,jdbcType=BIGINT},
      size = #{size,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      item_id = #{itemId,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      isdown = #{isdown,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      onshelf_time = #{onshelfTime,jdbcType=TIMESTAMP},
      layer_id = #{layerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="findItemByItemIdAndShopId" resultMap="BaseResultMap">
  	SELECT
		id,
		NAME,
		img_path,
		sourcing_price,
		market_price,
		sale_price,
		size,
		num,
		item_id,
		shop_id,
		`status`,
		isdown
	FROM
		shop_item
	WHERE
	    item_id = #{itemId}
	AND	shop_id = #{shopId}
  </select>
    <select id="findItemByShopId" resultMap="BaseResultMap">
        SELECT t.*,tt.barcode FROM (
        SELECT si.id,
        si.NAME,
        si.sourcing_price,
        si.market_price,
        si.sale_price,
        si.size,
        si.num,
        si.item_id,
        si.shop_id,
        si.status,
        si.isdown,si.layer_id,
        i.category_id categoryId,i.`id` iid,
        i.img_path,
        i.`big_img_path` bigImgPath,
        IF(DATEDIFF(DATE_FORMAT(NOW(), '%Y-%m-%d'), DATE_FORMAT(i.`created_time`,  '%Y-%m-%d'))&lt;=30,1,0) isnew,
        ic.`category_name` categoryName
        FROM shop_item si
        LEFT JOIN `item` i on si.`item_id`= i.`id`
        LEFT JOIN `item_category` ic on i.`category_id`= ic.`id`

        WHERE si.status= 1
        and si.isdown= 1
        AND si.shop_id= #{shopid}
        ORDER BY ic.score,
        i.`categorylevel_id`,si.name
        ) t LEFT JOIN (
        SELECT it.`item_id` , group_concat(it.`barcode`) barcode  FROM `item_taste` it GROUP BY it.`item_id`
        ) tt on t.iid = tt.item_id
  </select>
    <update id="updateNum">
  	UPDATE shop_item
SET isdown = 
	CASE isdown WHEN 1 THEN 
 CASE 
WHEN num &gt; ${num} THEN 1
ELSE
	0
END
ELSE 0
END, 
num = case
when num &gt; ${num} THEN
	num - ${num}
ELSE
	0
END
WHERE
	id = #{id}
  </update>
    <select id="findItemsByShopIdAndIsdown" resultMap="BaseResultMap">
        SELECT
        si.id,
        si.NAME,
        i.img_path,
        si.sourcing_price,
        si.market_price,
        si.sale_price,
        si.size,
        si.num,
        si.item_id,
        si.shop_id,
        si.`status`,
        si.isdown,i.shelf_life life,
        CASE DAYOFWEEK(si.onshelf_time)-1
        WHEN 1 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 3,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),
        DATEDIFF(
        date_format(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        )
        )
        WHEN 2 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 3,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),
        DATEDIFF(
        date_format(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        )
        )
        WHEN 3 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 4 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 5 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 6 THEN
        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 0 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 4,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 4,
        1,
        3
        )
        )
        END flag,
        cr.consume_num consumeNum
        FROM
        shop_item si
        LEFT JOIN item i on si.item_id = i.id
        LEFT JOIN consume_rank cr on si.id = cr.item_id
        LEFT JOIN item_category ic on i.category_id=ic.id
        WHERE
        si.status = 1
        <if test="name != null" >
            and si.name like '%${name}%'
        </if>
        and si.isdown =#{isdown}
        AND si.shop_id = #{shopId}
        <if test="isdown==0">
            ORDER BY si.updated_time desc
        </if>
        <if test="isdown==1">
            ORDER BY ic.score,i.category_id,i.`categorylevel_id`,si.name
        </if>
    </select>
    <select id="findTolalMoneyAndKind" resultType="hashmap">
  	SELECT COUNT(1) kinds,IFNULL(SUM(`sourcing_price` * `num` ),0) money FROM `shop_item` WHERE `status` =1 and isdown=1 and `shop_id` =#{shopid}
  </select>
    <select id="findShopItemMoney" resultType="long">
  	SELECT ifnull(sum(`sourcing_price`*num),0) FROM `shop_item` WHERE `isdown` = 1 and  `shop_id` = #{userId}
  </select>
    <update id="changeSalePrice">
  	UPDATE shop_item SET sale_price = ROUND(sourcing_price*#{discount}/100,1)*100 where shop_id = #{id}
  </update>
    <select id="findactualShopItemList" resultType="com.b2b.common.domain.ShopItem">
        SELECT
        cir.`name` region ,cu.`user_name` userName,
        si.name,
        si.sourcing_price sourcingPrice,
        si.sale_price salePrice,
        si.size,
        si.num,
        CASE DAYOFWEEK(si.onshelf_time)-1
        WHEN 1 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 3,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),
        DATEDIFF(
        date_format(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        )
        )
        WHEN 2 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 3,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),
        DATEDIFF(
        date_format(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        )
        )
        WHEN 3 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 4 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 5 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 6 THEN
        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 0 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 4,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 4,
        1,
        3
        )
        )
        END flag,
        cr.consume_num consumeNum,si.`onshelf_time`  onshelfTime
        FROM
        shop_item si
        LEFT JOIN consume_rank cr on si.id = cr.item_id
        LEFT JOIN `customer_user` cu on si.`shop_id` =cu.`id`
        LEFT JOIN `city_region` cir on cu.`region_id` =cir.`id`
        LEFT JOIN reseau r on r.id = cu.reseau_id
        LEFT JOIN `item` i on si.`item_id`= i.`id`
        WHERE
        si.status = 1 and cu.city_id =#{cityId}
        <if test="userName !='' and userName !=null">
            and cu.`user_name` = #{userName}
        </if>
        <if test="itemName !='' and itemName !=null">
            and si.name like '%${itemName}%'
        </if>
        <if test="reseauId !='' and reseauId !=null">
            and r.id = #{reseauId}
        </if>
        <if test="isnew !='' and isnew !=null">
            and DATEDIFF(DATE_FORMAT(NOW(), '%Y-%m-%d'), DATE_FORMAT(i.`created_time`,  '%Y-%m-%d'))&lt;=30
        </if>
        and si.isdown =1
        <if test="param=='0'.toString()">
            order by si.onshelf_time desc
        </if>
        <if test="param=='1'.toString()">
            order by cr.consume_num desc
        </if>
    </select>
    <select id="findactualShopItemConsumeTotal" resultType="int">
        SELECT IFNULL(SUM(cr.consume_num), 0) consumeNum
        FROM
        shop_item si
        LEFT JOIN consume_rank cr on si.id = cr.item_id
        LEFT JOIN `customer_user` cu on si.`shop_id` =cu.`id`
        LEFT JOIN `city_region` cir on cu.`region_id` =cir.`id`
        LEFT JOIN reseau r on r.id = cu.reseau_id
        LEFT JOIN `item` i on si.`item_id`= i.`id`
        WHERE
        si.status = 1 and cu.city_id =#{cityId}
        <if test="userName !='' and userName !=null">
            and cu.`user_name` = #{userName}
        </if>
        <if test="itemName !='' and itemName !=null">
            and si.name like '%${itemName}%'
        </if>
        <if test="reseauId !='' and reseauId !=null">
            and r.id = #{reseauId}
        </if>
        <if test="isnew !='' and isnew !=null">
            and DATEDIFF(DATE_FORMAT(NOW(), '%Y-%m-%d'), DATE_FORMAT(i.`created_time`,  '%Y-%m-%d'))&lt;=30
        </if>
        and si.isdown =1
    </select>
    <select id="findTolal" resultType="com.b2b.common.domain.ShopItem">
        SELECT
        t.salePrice, t.num, SUM(t.flag) flag, SUM(t.shopcount) shopId FROM (
        SELECT SUM(t.fee) salePrice,SUM(t.num) num,count(1) flag,0 shopcount FROM (
        SELECT SUM(`sourcing_price`* `num` ) fee, SUM(`num`) num
        FROM
        `shop_item` si
        LEFT JOIN `customer_user` cu on si.`shop_id` =cu.`id`
        LEFT JOIN reseau r ON r.id = cu.reseau_id
        LEFT JOIN `item` i on si.`item_id`= i.`id`
        WHERE
        si.status = 1 and cu.city_id =#{cityId}
        <if test="userName !='' and userName !=null">and cu.`user_name` = #{userName}
            and si.name like '%${itemName}%'</if>
        <if test="
        itemName !='' and itemName !=null">
            and si.name
            like
            '%${itemName}%'
        </if>
        <if test="reseauId !='' and reseauId !=null">
            and r.id = #{reseauId}
        </if>
        <if test="isnew !='' and isnew !=null">
            and DATEDIFF(DATE_FORMAT(NOW(), '%Y-%m-%d'), DATE_FORMAT(i.`created_time`, '%Y-%m-%d'))&lt;=30
        </if>
        and si.isdown =1
        GROUP BY si.`item_id` )t
        UNION ALL
        SELECT SUM(t.fee) salePrice,SUM(t.num) num, 0, COUNT(1) FROM (
        SELECT SUM(`sourcing_price`* `num`) fee, SUM(`num`) num
        FROM
        `shop_item` si
        LEFT JOIN `customer_user` cu on si.`shop_id` =cu.`id`
        LEFT JOIN reseau r ON r.id = cu.reseau_id
        LEFT JOIN `item` i on si.`item_id`= i.`id`
        WHERE si.status = 1 and cu.city_id =#{cityId}
        <if test="userName !='' and userName !=null">
            and cu.`user_name` = #{userName}
        </if>
        <if test="itemName !='' and itemName !=null">
            and si.name like '%${itemName}%'
        </if>
        <if test="reseauId !='' and reseauId !=null">
            and r.id = #{reseauId}
        </if>
        <if test="isnew !='' and isnew !=null">
            and DATEDIFF(DATE_FORMAT(NOW(), '%Y-%m-%d'), DATE_FORMAT(i.`created_time`,  '%Y-%m-%d'))&lt;=30
        </if>
        and si.isdown =1
        GROUP BY si.`shop_id` )t
        ) t
    </select>
    <update id="changeSalePriceToSourcingPrice">
  UPDATE shop_item SET sale_price = sourcing_price where shop_id = #{id}
  </update>
    <select id="findTolalByReseauId" resultType="long">
  	SELECT ifnull(SUM(`sourcing_price`* `num`),0) fee
  FROM `shop_item` si
  LEFT JOIN `customer_user` cu on si.`shop_id`= cu.`id`
 where si.status= 1
   and si.isdown= 1
   and cu.`reseau_id`= #{reseauId}
  </select>
    <select id="findTolalByCityId" resultType="long">
  SELECT ifnull(SUM(`sourcing_price`* `num`),0) fee
  FROM `shop_item` si
  LEFT JOIN `customer_user` cu on si.`shop_id`= cu.`id`
 where si.status= 1
   and si.isdown= 1
   and cu.city_id =#{cityId}
  </select>
    <update id="updateDefaultLayerId">
        UPDATE `shop_item` set `layer_id` = #{id} where `shop_id` = #{shopId}
    </update>
    <select id="findItemByShopIdAndIsdownAndLayerId" resultMap="BaseResultMap">

        SELECT
        si.id,
        si.NAME,
        i.img_path,
        si.sourcing_price,
        si.market_price,
        si.sale_price,
        si.size,
        si.num,
        si.item_id,
        si.shop_id,
        si.`status`,
        si.isdown,i.shelf_life life,
        CASE DAYOFWEEK(si.onshelf_time)-1
        WHEN 1 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 3,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),
        DATEDIFF(
        date_format(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        )
        )
        WHEN 2 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 3,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),
        DATEDIFF(
        date_format(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        )
        )
        WHEN 3 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 4 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 5 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 6 THEN
        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 5,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 5,
        1,
        3
        )
        )
        WHEN 0 THEN

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) = 4,

        IF (
        DATE_FORMAT(si.onshelf_time, '%k') &lt; 6,
        1,
        3
        ),

        IF (
        DATEDIFF(
        DATE_FORMAT(NOW(), '%Y-%m-%d'),
        DATE_FORMAT(si.onshelf_time, '%Y-%m-%d')
        ) &lt; 4,
        1,
        3
        )
        )
        END flag,si.layer_id,
        cr.consume_num consumeNum
        FROM
        shop_item si
        LEFT JOIN item i on si.item_id = i.id
        LEFT JOIN consume_rank cr on si.id = cr.item_id
        LEFT JOIN item_category ic on i.category_id=ic.id
        WHERE
        si.status = 1
     
        and si.isdown =#{isdown}
        AND si.shop_id = #{shopId}
      and si.`layer_id` =#{layerId}
    </select>
    <update id="updateLayerIdToNull">
        UPDATE `shop_item` SET layer_id = null where layer_id = #{layerId}
    </update>
    <update id="updateLayerIdWhereIsNull">
    UPDATE `shop_item` set `layer_id` = #{id} where `shop_id` = #{shopId} and `layer_id` is null
    </update>
    <select id="findOftenBuyItemByBuyerIdAndShopIdAndSign" resultMap="BaseResultMap">
          SELECT si.*,i.`big_img_path` bigImgPath
          FROM `shop_order` so
          LEFT JOIN `shop_order_item` soi on so.`id`= soi.`order_id`
          LEFT JOIN `shop_item` si on soi.`item_id`= si.`id`
            LEFT JOIN `item` i on si.`item_id` = i.`id`
         where so.`status`= 1
           and so.`shop_id`= #{shopId}
           and so.`buyer_id`= #{buyerId}
           and so.`sign`= #{sign}
           and si.`isdown` =1
         GROUP BY soi.`item_id`
        HAVING sum(soi.`num`)> 2
         ORDER BY sum(soi.`num`) DESC
         LIMIT 6
    </select>
    <select id="findItemByShopIdAndBarCode" resultMap="BaseResultMap">
    	SELECT si.*,i.`barcode`,i.`category_id` categoryId
		  FROM `shop_item` si
		  LEFT JOIN `item` i on si.`item_id`= i.`id`
		 where si.`shop_id`= #{shopId}
		   and FIND_IN_SET(#{barcode}, i.`barcode`)> 0 LIMIT 1
    </select>
    <select id="findTotalNumByItemIdAndSaleId" resultType="int">
		SELECT  ifnull(SUM(`num`),0) FROM `shop_item` WHERE `item_id` =#{itemId} and `shop_id` IN (SELECT customer_id FROM `item_sale_customer` WHERE `itemsale_id` =#{id})
    </select>
    <select id="findTotalNumByItemId" resultType="int">
		SELECT  ifnull(SUM(`num`),0) FROM `shop_item` WHERE `item_id` =#{itemId} 
    </select>
</mapper>