<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.b2b.common.dao.RefundMapper" >
  <resultMap id="BaseResultMap" type="com.b2b.common.domain.Refund" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="last_mod_user" property="lastModUser" jdbcType="INTEGER" />
    <result column="executed_time" property="executedTime" jdbcType="TIMESTAMP" />
    <result column="total_fee" property="totalFee" jdbcType="BIGINT" />
    <result column="cost_fee" property="costFee" jdbcType="BIGINT" />
    <result column="notaxInclusivecostFee" property="notaxinclusivecostfee" jdbcType="BIGINT" />
    <result column="discount" property="discount" jdbcType="DECIMAL" />
    <result column="reason" property="reason" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, created_time, modified_time, state, last_mod_user, executed_time, total_fee, 
    cost_fee, notaxInclusivecostFee, discount, reason, remark, city_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.b2b.common.domain.RefundExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitFlag">
	  limit ${start},${limit}
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from refund
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from refund
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.b2b.common.domain.RefundExample" >
    delete from refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.b2b.common.domain.Refund" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into refund (id, user_id, created_time, 
      modified_time, state, last_mod_user, 
      executed_time, total_fee, cost_fee, 
      notaxInclusivecostFee, discount, reason, 
      remark, city_id)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{modifiedTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{lastModUser,jdbcType=INTEGER}, 
      #{executedTime,jdbcType=TIMESTAMP}, #{totalFee,jdbcType=BIGINT}, #{costFee,jdbcType=BIGINT}, 
      #{notaxinclusivecostfee,jdbcType=BIGINT}, #{discount,jdbcType=DECIMAL}, #{reason,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{cityId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.b2b.common.domain.Refund" >
    insert into refund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="lastModUser != null" >
        last_mod_user,
      </if>
      <if test="executedTime != null" >
        executed_time,
      </if>
      <if test="totalFee != null" >
        total_fee,
      </if>
      <if test="costFee != null" >
        cost_fee,
      </if>
      <if test="notaxinclusivecostfee != null" >
        notaxInclusivecostFee,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="lastModUser != null" >
        #{lastModUser,jdbcType=INTEGER},
      </if>
      <if test="executedTime != null" >
        #{executedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="costFee != null" >
        #{costFee,jdbcType=BIGINT},
      </if>
      <if test="notaxinclusivecostfee != null" >
        #{notaxinclusivecostfee,jdbcType=BIGINT},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.b2b.common.domain.RefundExample" resultType="java.lang.Integer" >
    select count(*) from refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update refund
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.lastModUser != null" >
        last_mod_user = #{record.lastModUser,jdbcType=INTEGER},
      </if>
      <if test="record.executedTime != null" >
        executed_time = #{record.executedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalFee != null" >
        total_fee = #{record.totalFee,jdbcType=BIGINT},
      </if>
      <if test="record.costFee != null" >
        cost_fee = #{record.costFee,jdbcType=BIGINT},
      </if>
      <if test="record.notaxinclusivecostfee != null" >
        notaxInclusivecostFee = #{record.notaxinclusivecostfee,jdbcType=BIGINT},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=DECIMAL},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update refund
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      last_mod_user = #{record.lastModUser,jdbcType=INTEGER},
      executed_time = #{record.executedTime,jdbcType=TIMESTAMP},
      total_fee = #{record.totalFee,jdbcType=BIGINT},
      cost_fee = #{record.costFee,jdbcType=BIGINT},
      notaxInclusivecostFee = #{record.notaxinclusivecostfee,jdbcType=BIGINT},
      discount = #{record.discount,jdbcType=DECIMAL},
      reason = #{record.reason,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.b2b.common.domain.Refund" >
    update refund
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="lastModUser != null" >
        last_mod_user = #{lastModUser,jdbcType=INTEGER},
      </if>
      <if test="executedTime != null" >
        executed_time = #{executedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="costFee != null" >
        cost_fee = #{costFee,jdbcType=BIGINT},
      </if>
      <if test="notaxinclusivecostfee != null" >
        notaxInclusivecostFee = #{notaxinclusivecostfee,jdbcType=BIGINT},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.b2b.common.domain.Refund" >
    update refund
    set user_id = #{userId,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      last_mod_user = #{lastModUser,jdbcType=INTEGER},
      executed_time = #{executedTime,jdbcType=TIMESTAMP},
      total_fee = #{totalFee,jdbcType=BIGINT},
      cost_fee = #{costFee,jdbcType=BIGINT},
      notaxInclusivecostFee = #{notaxinclusivecostfee,jdbcType=BIGINT},
      discount = #{discount,jdbcType=DECIMAL},
      reason = #{reason,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findByTimeAndCityId" resultType="com.b2b.common.domain.Refund">
  	SELECT ri.`item_name` itemName,
       i.`cost_price`*ri.num as totalFee
  FROM `refund` r
  LEFT JOIN `refund_item` ri on r.`id`= ri.`refund_id`
  LEFT JOIN `item` i on ri.`item_id`= i.`id`
 WHERE r.state= 1 and r.city_id =#{cityId}
   and r.`created_time` &gt;= #{start}
   and r.`created_time` &lt;= #{end}
  </select>
  <select id="countMoneyByUserAndTime" resultType="int">
  	SELECT IFNULL(SUM(o.total_fee),0)
	FROM `refund` o 
	WHERE o.user_id=#{id} AND o.executed_time &gt;= #{firstDate} and o.executed_time &lt;= #{sumDate}
  </select>
  <select id="countNumByUserAndTime" resultType="int">
  SELECT IFNULL(count(1),0)
	FROM `refund` o 
	WHERE o.user_id=#{id} AND o.executed_time &gt;= #{firstDate} and o.executed_time &lt;= #{sumDate}
  </select>
  <select id="findRefundByShopId" resultMap="BaseResultMap">
   	SELECT * from refund where state =1 and user_id = #{shopId} order by executed_time desc
  </select>
  <select id="findItemInfoByOrderNo" resultType="hashmap">
  	SELECT
		i.img_path,
		ri.item_name,
		ri.item_price,
		ri.size_value,
		ri.num
	FROM
		refund r
	LEFT JOIN refund_item ri ON r.id = ri.refund_id
	LEFT JOIN item i ON ri.item_id = i.id
	WHERE
		r.id = #{id}
  </select>
  <select id="findRefundNumByMonth" resultType="int">
  	
SELECT COUNT(1) FROM `refund` WHERE `state` = 1 and date_format(`executed_time`,'%Y-%m') =date_format(#{date},'%Y-%m') and `user_id` = #{id}
  </select>
  <select id="findCurrentMonthFreeShopRefundFee" resultType="com.b2b.common.domain.Refund">
  SELECT IFNULL(SUM(total_fee),0) totalFee,COUNT(1) lastModUser FROM refund WHERE DATE_FORMAT(executed_time,'%Y%m%d') &gt;= DATE_FORMAT(#{start},'%Y%m%d') and DATE_FORMAT(executed_time,'%Y%m%d') &lt;= DATE_FORMAT(#{end},'%Y%m%d')  and `state` = 1 and user_id = #{id}
  </select>
  <select id="findTotal" resultType="long">
  	SELECT SUM(re.`total_fee`)  FROM `refund` re LEFT JOIN `customer_user` cu on re.`user_id` =cu.`id`
  	where re.state = 1 and re.city_id = #{cityId}
  	<if test="userName!='' and userName!=null">
  		and cu.user_name like '%${userName}%'
  	</if>
  	<if test="itemName!='' and itemName!=null">
  		and re.id in (SELECT `refund_id`  FROM `refund_item` WHERE `item_name` LIKE '%${itemName}%')
  	</if>
  	<if test="startTime !=null and startTime !=''">
  		and re.executed_time &gt;= #{startTime}
  	</if>
  	<if test="endTime !=null and endTime !=''">
  		and re.executed_time &lt;= #{endTime}
  	</if>
  	<if test="param!='' and param!=null">
  		and re.reason = #{param}
  	</if>
  	<if test="reseauId>0">
  	    and cu.reseau_id = #{reseauId}
  	</if>
  </select>
  <select id="findBeConfirmRefundByCityId" resultType="int">
   SELECT count(1) FROM refund where state=1 and reason = 0 and city_id =#{cityId}
  </select>
  <select id="findByCondition" resultMap="BaseResultMap">
  	SELECT re.* FROM `refund` re LEFT JOIN `customer_user` cu on re.`user_id` =cu.`id`  WHERE re.`state` =1 and re.city_id = #{cityId}
  	<if test="userName!='' and userName!=null">
  		and cu.user_name like '%${userName}%'
  	</if>
  	<if test="itemName!='' and itemName!=null">
  		and re.id in (SELECT `refund_id`  FROM `refund_item` WHERE `item_name` LIKE '%${itemName}%')
  	</if>
  	<if test="param!=null and param!=''">
  		and re.reason = #{param}
  	</if>
  	<if test="reseauId>0">
  		and cu.`reseau_id` = #{reseauId}
  	</if>
  	<if test="startTime!=null and startTime!=''">
  		and re.`executed_time` &gt;=#{startTime}
  	</if>
  	<if test="endTime!=null and endTime!=''">
  		and re.`executed_time` &lt;=#{endTime}
  	</if>
  	order by re.`executed_time` desc
  </select>
  <select id="findRefundFeeAndRefundNumByDayAndUserId" resultType="Refund">
	SELECT ifnull(SUM(r.`total_fee`), 0) totalFee,
	       COUNT(1) lastModUser
	  FROM `refund` r
	 WHERE r.`state`= 1
	   and date_format(r.`executed_time`, '%Y-%m-%d')= date_format(#{date}, '%Y-%m-%d')
	   and r.user_id= #{userId}
  </select>
</mapper>