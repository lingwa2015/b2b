<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.b2b.common.dao.OutstockItemMapper" >
  <resultMap id="BaseResultMap" type="com.b2b.common.domain.OutstockItem" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="outstock_id" property="outstockId" jdbcType="BIGINT" />
    <result column="item_id" property="itemId" jdbcType="INTEGER" />
    <result column="item_name" property="itemName" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="BIGINT" />
    <result column="cost_price" property="costPrice" jdbcType="BIGINT" />
    <result column="convert_num" property="convertNum" jdbcType="INTEGER" />
    <result column="outstock_num" property="outstockNum" jdbcType="INTEGER" />
    <result column="item_remark" property="itemRemark" jdbcType="VARCHAR" />
    <result column="total_price" property="totalPrice" jdbcType="BIGINT" />
    <result column="barcode" property="barcode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, outstock_id, item_id, item_name, category_id, category_name, size, price, cost_price, 
    convert_num, outstock_num, item_remark, total_price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.b2b.common.domain.OutstockItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from outstock_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from outstock_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from outstock_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.b2b.common.domain.OutstockItemExample" >
    delete from outstock_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.b2b.common.domain.OutstockItem" >
    insert into outstock_item (id, outstock_id, item_id, 
      item_name, category_id, category_name, 
      size, price, cost_price, 
      convert_num, outstock_num, item_remark, 
      total_price)
    values (#{id,jdbcType=BIGINT}, #{outstockId,jdbcType=BIGINT}, #{itemId,jdbcType=INTEGER}, 
      #{itemName,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, 
      #{size,jdbcType=VARCHAR}, #{price,jdbcType=BIGINT}, #{costPrice,jdbcType=BIGINT}, 
      #{convertNum,jdbcType=INTEGER}, #{outstockNum,jdbcType=INTEGER}, #{itemRemark,jdbcType=VARCHAR}, 
      #{totalPrice,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.b2b.common.domain.OutstockItem" >
    insert into outstock_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="outstockId != null" >
        outstock_id,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="itemName != null" >
        item_name,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="costPrice != null" >
        cost_price,
      </if>
      <if test="convertNum != null" >
        convert_num,
      </if>
      <if test="outstockNum != null" >
        outstock_num,
      </if>
      <if test="itemRemark != null" >
        item_remark,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="outstockId != null" >
        #{outstockId,jdbcType=BIGINT},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=BIGINT},
      </if>
      <if test="costPrice != null" >
        #{costPrice,jdbcType=BIGINT},
      </if>
      <if test="convertNum != null" >
        #{convertNum,jdbcType=INTEGER},
      </if>
      <if test="outstockNum != null" >
        #{outstockNum,jdbcType=INTEGER},
      </if>
      <if test="itemRemark != null" >
        #{itemRemark,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.b2b.common.domain.OutstockItemExample" resultType="java.lang.Integer" >
    select count(*) from outstock_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update outstock_item
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.outstockId != null" >
        outstock_id = #{record.outstockId,jdbcType=BIGINT},
      </if>
      <if test="record.itemId != null" >
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.itemName != null" >
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryName != null" >
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null" >
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.costPrice != null" >
        cost_price = #{record.costPrice,jdbcType=BIGINT},
      </if>
      <if test="record.convertNum != null" >
        convert_num = #{record.convertNum,jdbcType=INTEGER},
      </if>
      <if test="record.outstockNum != null" >
        outstock_num = #{record.outstockNum,jdbcType=INTEGER},
      </if>
      <if test="record.itemRemark != null" >
        item_remark = #{record.itemRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPrice != null" >
        total_price = #{record.totalPrice,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update outstock_item
    set id = #{record.id,jdbcType=BIGINT},
      outstock_id = #{record.outstockId,jdbcType=BIGINT},
      item_id = #{record.itemId,jdbcType=INTEGER},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=BIGINT},
      cost_price = #{record.costPrice,jdbcType=BIGINT},
      convert_num = #{record.convertNum,jdbcType=INTEGER},
      outstock_num = #{record.outstockNum,jdbcType=INTEGER},
      item_remark = #{record.itemRemark,jdbcType=VARCHAR},
      total_price = #{record.totalPrice,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.b2b.common.domain.OutstockItem" >
    update outstock_item
    <set >
      <if test="outstockId != null" >
        outstock_id = #{outstockId,jdbcType=BIGINT},
      </if>
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null" >
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="costPrice != null" >
        cost_price = #{costPrice,jdbcType=BIGINT},
      </if>
      <if test="convertNum != null" >
        convert_num = #{convertNum,jdbcType=INTEGER},
      </if>
      <if test="outstockNum != null" >
        outstock_num = #{outstockNum,jdbcType=INTEGER},
      </if>
      <if test="itemRemark != null" >
        item_remark = #{itemRemark,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.b2b.common.domain.OutstockItem" >
    update outstock_item
    set outstock_id = #{outstockId,jdbcType=BIGINT},
      item_id = #{itemId,jdbcType=INTEGER},
      item_name = #{itemName,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR},
      size = #{size,jdbcType=VARCHAR},
      price = #{price,jdbcType=BIGINT},
      cost_price = #{costPrice,jdbcType=BIGINT},
      convert_num = #{convertNum,jdbcType=INTEGER},
      outstock_num = #{outstockNum,jdbcType=INTEGER},
      item_remark = #{itemRemark,jdbcType=VARCHAR},
      total_price = #{totalPrice,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findByOutstockId" resultMap="BaseResultMap">
    SELECT
      oi.id, oi.outstock_id, oi.item_id,
        oi.item_name, oi.category_id, oi.category_name,
        oi.size, oi.price, oi.cost_price,
        oi.convert_num, oi.outstock_num, oi.item_remark,
        oi.total_price, i.barcode
      FROM `outstock_item` oi
          LEFT JOIN item i ON i.id = oi.item_id
      WHERE `outstock_id`= #{outstockId}
      ORDER BY oi.item_id
  </select>
</mapper>