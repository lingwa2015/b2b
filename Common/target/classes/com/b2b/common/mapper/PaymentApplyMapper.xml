<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.b2b.common.dao.PaymentApplyMapper" >
  <resultMap id="BaseResultMap" type="com.b2b.common.domain.PaymentApply" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="supplier" property="supplier" jdbcType="VARCHAR" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="paymented_time" property="paymentedTime" jdbcType="TIMESTAMP" />
    <result column="year" property="year" jdbcType="INTEGER" />
    <result column="month" property="month" jdbcType="INTEGER" />
    <result column="payment_price" property="paymentPrice" jdbcType="BIGINT" />
    <result column="applicant_id" property="applicantId" jdbcType="INTEGER" />
    <result column="applicant" property="applicant" jdbcType="VARCHAR" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="remake" property="remake" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, supplier_id, supplier, payment_time, paymented_time, year, month, payment_price, 
    applicant_id, applicant, account_name, account, bank_name, remake, status, created_time, 
    user_id, user_name, city_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.b2b.common.domain.PaymentApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from payment_apply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from payment_apply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.b2b.common.domain.PaymentApplyExample" >
    delete from payment_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.b2b.common.domain.PaymentApply" >
    insert into payment_apply (id, supplier_id, supplier, 
      payment_time, paymented_time, year, 
      month, payment_price, applicant_id, 
      applicant, account_name, account, 
      bank_name, remake, status, 
      created_time, user_id, user_name, 
      city_id)
    values (#{id,jdbcType=BIGINT}, #{supplierId,jdbcType=INTEGER}, #{supplier,jdbcType=VARCHAR}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{paymentedTime,jdbcType=TIMESTAMP}, #{year,jdbcType=INTEGER}, 
      #{month,jdbcType=INTEGER}, #{paymentPrice,jdbcType=BIGINT}, #{applicantId,jdbcType=INTEGER}, 
      #{applicant,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{remake,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{cityId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.b2b.common.domain.PaymentApply" >
    insert into payment_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="supplier != null" >
        supplier,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="paymentedTime != null" >
        paymented_time,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="month != null" >
        month,
      </if>
      <if test="paymentPrice != null" >
        payment_price,
      </if>
      <if test="applicantId != null" >
        applicant_id,
      </if>
      <if test="applicant != null" >
        applicant,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="remake != null" >
        remake,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="supplier != null" >
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentedTime != null" >
        #{paymentedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="year != null" >
        #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        #{month,jdbcType=INTEGER},
      </if>
      <if test="paymentPrice != null" >
        #{paymentPrice,jdbcType=BIGINT},
      </if>
      <if test="applicantId != null" >
        #{applicantId,jdbcType=INTEGER},
      </if>
      <if test="applicant != null" >
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="remake != null" >
        #{remake,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.b2b.common.domain.PaymentApplyExample" resultType="java.lang.Integer" >
    select count(*) from payment_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update payment_apply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.supplierId != null" >
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.supplier != null" >
        supplier = #{record.supplier,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentTime != null" >
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentedTime != null" >
        paymented_time = #{record.paymentedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.month != null" >
        month = #{record.month,jdbcType=INTEGER},
      </if>
      <if test="record.paymentPrice != null" >
        payment_price = #{record.paymentPrice,jdbcType=BIGINT},
      </if>
      <if test="record.applicantId != null" >
        applicant_id = #{record.applicantId,jdbcType=INTEGER},
      </if>
      <if test="record.applicant != null" >
        applicant = #{record.applicant,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null" >
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null" >
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.remake != null" >
        remake = #{record.remake,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update payment_apply
    set id = #{record.id,jdbcType=BIGINT},
      supplier_id = #{record.supplierId,jdbcType=INTEGER},
      supplier = #{record.supplier,jdbcType=VARCHAR},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      paymented_time = #{record.paymentedTime,jdbcType=TIMESTAMP},
      year = #{record.year,jdbcType=INTEGER},
      month = #{record.month,jdbcType=INTEGER},
      payment_price = #{record.paymentPrice,jdbcType=BIGINT},
      applicant_id = #{record.applicantId,jdbcType=INTEGER},
      applicant = #{record.applicant,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      remake = #{record.remake,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.b2b.common.domain.PaymentApply" >
    update payment_apply
    <set >
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="supplier != null" >
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentedTime != null" >
        paymented_time = #{paymentedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="paymentPrice != null" >
        payment_price = #{paymentPrice,jdbcType=BIGINT},
      </if>
      <if test="applicantId != null" >
        applicant_id = #{applicantId,jdbcType=INTEGER},
      </if>
      <if test="applicant != null" >
        applicant = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="remake != null" >
        remake = #{remake,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.b2b.common.domain.PaymentApply" >
    update payment_apply
    set supplier_id = #{supplierId,jdbcType=INTEGER},
      supplier = #{supplier,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      paymented_time = #{paymentedTime,jdbcType=TIMESTAMP},
      year = #{year,jdbcType=INTEGER},
      month = #{month,jdbcType=INTEGER},
      payment_price = #{paymentPrice,jdbcType=BIGINT},
      applicant_id = #{applicantId,jdbcType=INTEGER},
      applicant = #{applicant,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      remake = #{remake,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findList" resultMap="BaseResultMap">
    SELECT id, supplier_id, supplier, payment_time, paymented_time, year, month, payment_price,
        applicant_id, applicant, account_name, account, bank_name, remake, status, created_time,
        user_id, user_name, city_id
    FROM payment_apply pa
    WHERE
        pa.city_id = #{cityId}
        <if test="startTime !=null and startTime !=''">
          AND pa.`year` &gt;= DATE_FORMAT(#{startTime}, '%Y') AND pa.`month` &gt;= DATE_FORMAT(#{startTime}, '%m')
        </if>
        <if test="endTime !=null and endTime !=''">
          AND pa.`year` &lt;= DATE_FORMAT(#{endTime}, '%Y') AND pa.`month` &lt;= DATE_FORMAT(#{endTime}, '%m')
        </if>
        <if test="createStartTime !=null and createStartTime !=''">
          AND pa.`created_time` &gt;= #{createStartTime}
        </if>
        <if test="createEndTime !=null and createEndTime !=''">
          AND pa.`created_time` &lt;= #{createEndTime}
        </if>
        <if test="paymentTime !=null and paymentTime !=''">
          AND pa.`payment_time` = #{paymentTime}
        </if>
        <if test="status !=null and status !=''">
          AND pa.`status` = #{status}
        </if>
        <if test="supplierName !=null and supplierName !=''">
          and pa.supplier like '%${supplierName}%'
        </if>
        AND pa.`status` != 4
      ORDER BY pa.created_time desc
  </select>
  <select id="findPriceByStatus" resultType="java.lang.Long">
    SELECT IFNULL(SUM(pa.payment_price), 0) payment_price
    FROM payment_apply pa
    WHERE pa.city_id = #{cityId}
    <if test="startTime !=null and startTime !=''">
      AND pa.`year` &gt;= DATE_FORMAT(#{startTime}, '%Y') AND pa.`month` &gt;= DATE_FORMAT(#{startTime}, '%m')
    </if>
    <if test="endTime !=null and endTime !=''">
      AND pa.`year` &lt;= DATE_FORMAT(#{endTime}, '%Y') AND pa.`month` &lt;= DATE_FORMAT(#{endTime}, '%m')
    </if>
    <if test="createStartTime !=null and createStartTime !=''">
      AND pa.`created_time` &gt;= #{createStartTime}
    </if>
    <if test="createEndTime !=null and createEndTime !=''">
      AND pa.`created_time` &lt;= #{createEndTime}
    </if>
    <if test="paymentTime !=null and paymentTime !=''">
      AND pa.`payment_time` = #{paymentTime}
    </if>
    <if test="status !=null and status !=''">
      AND pa.`status` = #{status}
    </if>
    <if test="supplierName !=null and supplierName !=''">
      and pa.supplier like '%${supplierName}%'
    </if>
    AND pa.`status` != 4
  </select>
</mapper>