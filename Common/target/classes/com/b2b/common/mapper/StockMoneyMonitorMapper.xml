<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.b2b.common.dao.StockMoneyMonitorMapper" >
  <resultMap id="BaseResultMap" type="com.b2b.common.domain.StockMoneyMonitor" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="stock_money" property="stockMoney" jdbcType="BIGINT" />
    <result column="change_money" property="changeMoney" jdbcType="BIGINT" />
    <result column="in_stock_money" property="inStockMoney" jdbcType="BIGINT" />
    <result column="out_stock_money" property="outStockMoney" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, stock_money, change_money, in_stock_money, out_stock_money, create_time, city_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.b2b.common.domain.StockMoneyMonitorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from stock_money_monitor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from stock_money_monitor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stock_money_monitor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.b2b.common.domain.StockMoneyMonitorExample" >
    delete from stock_money_monitor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.b2b.common.domain.StockMoneyMonitor" >
    insert into stock_money_monitor (id, stock_money, change_money, 
      in_stock_money, out_stock_money, create_time, 
      city_id)
    values (#{id,jdbcType=INTEGER}, #{stockMoney,jdbcType=BIGINT}, #{changeMoney,jdbcType=BIGINT}, 
      #{inStockMoney,jdbcType=BIGINT}, #{outStockMoney,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{cityId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.b2b.common.domain.StockMoneyMonitor" >
    insert into stock_money_monitor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="stockMoney != null" >
        stock_money,
      </if>
      <if test="changeMoney != null" >
        change_money,
      </if>
      <if test="inStockMoney != null" >
        in_stock_money,
      </if>
      <if test="outStockMoney != null" >
        out_stock_money,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stockMoney != null" >
        #{stockMoney,jdbcType=BIGINT},
      </if>
      <if test="changeMoney != null" >
        #{changeMoney,jdbcType=BIGINT},
      </if>
      <if test="inStockMoney != null" >
        #{inStockMoney,jdbcType=BIGINT},
      </if>
      <if test="outStockMoney != null" >
        #{outStockMoney,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.b2b.common.domain.StockMoneyMonitorExample" resultType="java.lang.Integer" >
    select count(*) from stock_money_monitor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update stock_money_monitor
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stockMoney != null" >
        stock_money = #{record.stockMoney,jdbcType=BIGINT},
      </if>
      <if test="record.changeMoney != null" >
        change_money = #{record.changeMoney,jdbcType=BIGINT},
      </if>
      <if test="record.inStockMoney != null" >
        in_stock_money = #{record.inStockMoney,jdbcType=BIGINT},
      </if>
      <if test="record.outStockMoney != null" >
        out_stock_money = #{record.outStockMoney,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update stock_money_monitor
    set id = #{record.id,jdbcType=INTEGER},
      stock_money = #{record.stockMoney,jdbcType=BIGINT},
      change_money = #{record.changeMoney,jdbcType=BIGINT},
      in_stock_money = #{record.inStockMoney,jdbcType=BIGINT},
      out_stock_money = #{record.outStockMoney,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      city_id = #{record.cityId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.b2b.common.domain.StockMoneyMonitor" >
    update stock_money_monitor
    <set >
      <if test="stockMoney != null" >
        stock_money = #{stockMoney,jdbcType=BIGINT},
      </if>
      <if test="changeMoney != null" >
        change_money = #{changeMoney,jdbcType=BIGINT},
      </if>
      <if test="inStockMoney != null" >
        in_stock_money = #{inStockMoney,jdbcType=BIGINT},
      </if>
      <if test="outStockMoney != null" >
        out_stock_money = #{outStockMoney,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.b2b.common.domain.StockMoneyMonitor" >
    update stock_money_monitor
    set stock_money = #{stockMoney,jdbcType=BIGINT},
      change_money = #{changeMoney,jdbcType=BIGINT},
      in_stock_money = #{inStockMoney,jdbcType=BIGINT},
      out_stock_money = #{outStockMoney,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      city_id = #{cityId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="count" resultType="int">
  	SELECT count(1) from `stock_money_monitor` where city_id = #{cityId}
  	<if test="startTime!=null">
  	and create_time &gt;= #{startTime}
  </if>
  <if test="endTime!=null">
  	and create_time &lt;= #{endTime}
  </if>
  </select>
  <select id="findPageList" resultType="StockMoneyMonitor">
  	SELECT `stock_money` stockMoney  ,`change_money` changeMoney ,`in_stock_money` inStockMoney ,`out_stock_money` outStockMoney ,`create_time` createTime from `stock_money_monitor` where city_id =#{cityId}
  	<if test="startTime!=null">
  	and create_time &gt;= #{startTime}
  </if>
  <if test="endTime!=null">
  	and create_time &lt;= #{endTime}
  </if>
  order by create_time desc
  limit ${start},${pageSize}
  </select>
</mapper>